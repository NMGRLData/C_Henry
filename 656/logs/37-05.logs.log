do run
loading script "jan_unknown120_60.py"
loading script "jan_pump_ms.py"
loading script "jan_co2.py"
loading script "jan_pump_extraction_line.py"
testing...
no interpolation path defined
executed snippet estimated_duration=213.652928, duration=0.000197887420654
script duration name:unknown120_60 seconds:214.0
loading script "jan_unknown120_60.py"
loading script "jan_pump_ms.py"
loading script "jan_co2.py"
loading script "jan_pump_extraction_line.py"
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=1.8835067749e-05
loading script "jan_unknown120_60.py"
loading script "jan_pump_ms.py"
loading script "jan_co2.py"
loading script "jan_pump_extraction_line.py"
testing...
no interpolation path defined
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=4.41074371338e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=8.60691070557e-05
executed snippet estimated_duration=0.0, duration=0.00200295448303
script duration name:co2 seconds:0.0
loading script "jan_unknown120_60.py"
loading script "jan_pump_ms.py"
loading script "jan_co2.py"
loading script "jan_pump_extraction_line.py"
testing...
no interpolation path defined
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=4.0, duration=0.000131130218506
executed snippet estimated_duration=4.0, duration=0.0011670589447
Script duration 214.0
Run total estimated duration= 215.000
run duration: 0:03:35
doing event level: 2
01:28:59 -- Setting default integration. t=1.048576
setting integration time = 1.048576
SetIntegrationTime 1.048576 ===>> OK
----------------- start -----------------
**************** Experiment Type: Ar/Ar, Ar/Ar
create new session 4967310640
close session 4967310640
$$$$$ Clearing conditionals
adding conditionals CDDtrip
extract conditionals from file. /Users/jan/PychronDev/scripts/conditionals/CDDtrip.yaml
no attr for this modification cd={'extraction_str': '', 'attr': '', 'mapper': '', 'use_termination': False, 'start_count': 0, 'nskip': 0, 'window': 0, 'frequency': 1, 'teststr': '', 'action': 'Skip Next Run', 'ntrips': 1, 'use_truncation': False}
adding cancelation attr="Ar36" test="Ar36<0.002" start="60"
no attr for this truncation cd={'mapper': '', 'window': 0, 'frequency': 1, 'attr': '', 'teststr': '', 'start_count': 0, 'ntrips': 1}
adding termination attr="Ar40" test="Ar40>5000.0" start="1"
Invalid conditional kind="pre_run_terminations"
no attr for this action cd={'mapper': '', 'attr': '', 'start_count': 0, 'window': 0, 'frequency': 1, 'teststr': '', 'action': None, 'ntrips': 1}
Invalid conditional kind="post_run_terminations"
Add queue conditionals
add default conditionals
adding default conditionals from /Users/jan/PychronDev/setupfiles/spectrometer/default_conditionals.yaml
Start automated run 65637-05
loading script "jan_unknown120_60.py"
loading script "jan_pump_ms.py"
loading script "jan_co2.py"
loading script "jan_pump_extraction_line.py"
%%%%%%%%%%%%%%%%%% setting automated run 65637-05
No value "sensitivity_multiplier" in metadata
$$$$$$$$$$$$$$$ auto_save_detector_ic=False
============================= Pre Extraction Check =============================
loading queue conditionals pre_run_terminations
loading system conditionals pre_run_terminations
loading conditionals from /Users/jan/PychronDev/setupfiles/spectrometer/default_conditionals.yaml
01:28:59 -- ******* Pre Extraction Check *******
Get a measurement from the spectrometer
Pre Extraction Termination data. keys=H2,H1,AX,L1,L2,CDD, signals=-0.32230,0.21069,-0.01766,0.01326,0.08525,0.00316
01:28:59 -- testing system defined conditionals
Checking default pre extraction terminations n=2
testing CDD
evaluate ot="CDD.inactive" t="CDD", ctx="{'CDD': False}"
GetDeflection CDD ===>> 50
testing CDD==2000
evaluate ot="CDD.deflection==2000" t="CDD==2000", ctx="{'CDD': 50.0}"
01:28:59 -- ******* Pre Extraction Check Passed *******
=================================================================================
01:28:59 -- stopping status monitor
stop 4939519376
Status monitor stopped
Status monitor finished
01:29:00 -- starting status monitor
start 4939519376
StatusMonitor period=1. Frequencies(state=2, checksum=3, lock=5, owner=5)
start extraction
do extraction
Analysis started at 01:29:02.202676
Extraction Started jan_co2.py
01:29:02 -- ******* Extraction Started jan_co2.py *******
state changed from not run to extraction
DO EXTRACTION <pychron.extraction_line.pyscript_runner.RemotePyScriptRunner object at 0x12a13cd10>
testing...
no interpolation path defined
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=4.60147857666e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=8.48770141602e-05
executed snippet estimated_duration=100.0, duration=0.0025520324707
Jan CO2 laser analysis
doing GOSUB
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=4.48226928711e-05
Waiting for CO2 access
wait ('FelixCO2Flag', 0) {}
waiting for FelixCO2Flag = 0
Read FelixCO2Flag ===>> 0
finished waiting
CO2 free
wait ('CO2PumpTimeFlag', 0) {}
waiting for CO2PumpTimeFlag = 0
Read CO2PumpTimeFlag ===>> 0
finished waiting
acquire ('JanCO2Flag',) {'clear': True}
acquire JanCO2Flag
Set JanCO2Flag 1 ===>> OK
JanCO2Flag acquired
set extraction state False (0.75, 'red', 1.5)
CO2 acquired
executed snippet estimated_duration=0, duration=0.0166480541229
WaitForCO2Access.py completed successfully
gosub finished
doing GOSUB
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=0.000113964080811
Prepare for CO2 analysis
close () {'description': 'Jan Inlet'}
close name=--- desc=Jan Inlet
checking ownership. requestor=129.138.12.150
check software interlocks R
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel False
Close R ===>> OK
GetIndicatorState R ===>> False
change switch state (True, True)
update switch state R False args=() kw={} ncanvase=3
01:29:02 -- CLOSE  VALVE-R (Jan Inlet)
-------------------------- close None (Jan Inlet) result=[(True, True)]
action=close, ok=True, locked=[False]
open () {'description': 'Jan Ion Pump'}
open name=--- desc=Jan Ion Pump
checking ownership. requestor=129.138.12.150
check software interlocks O
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open O ===>> OK
GetIndicatorState O ===>> OK
change switch state (True, True)
update switch state O True args=() kw={} ncanvase=3
01:29:03 -- OPEN   VALVE-O (Jan Ion Pump)
-------------------------- open None (Jan Ion Pump) result=[(True, True)]
action=open, ok=True, locked=[False]
close () {'description': 'Microbone to Minibone'}
close name=--- desc=Microbone to Minibone
checking ownership. requestor=129.138.12.150
check software interlocks L
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel False
Close L ===>> OK
GetIndicatorState L ===>> False
change switch state (True, True)
update switch state L False args=() kw={} ncanvase=3
01:29:03 -- CLOSE  VALVE-L (Microbone to Minibone)
-------------------------- close None (Microbone to Minibone) result=[(True, True)]
action=close, ok=True, locked=[False]
open () {'description': 'Microbone to Turbo'}
open name=--- desc=Microbone to Turbo
checking ownership. requestor=129.138.12.150
check software interlocks U
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open U ===>> OK
GetIndicatorState U ===>> OK
change switch state (True, True)
update switch state U True args=() kw={} ncanvase=3
01:29:04 -- OPEN   VALVE-U (Microbone to Turbo)
-------------------------- open None (Microbone to Turbo) result=[(True, True)]
action=open, ok=True, locked=[False]
open () {'description': 'Microbone to Inlet Pipette'}
open name=--- desc=Microbone to Inlet Pipette
checking ownership. requestor=129.138.12.150
check software interlocks S
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open S ===>> OK
GetIndicatorState S ===>> OK
change switch state (True, True)
update switch state S True args=() kw={} ncanvase=3
01:29:04 -- OPEN   VALVE-S (Microbone to Inlet Pipette)
-------------------------- open None (Microbone to Inlet Pipette) result=[(True, True)]
action=open, ok=True, locked=[False]
open () {'description': 'Microbone to Getter D-50'}
open name=--- desc=Microbone to Getter D-50
checking ownership. requestor=129.138.12.150
check software interlocks K
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open K ===>> OK
GetIndicatorState K ===>> OK
change switch state (True, True)
update switch state K True args=() kw={} ncanvase=3
01:29:05 -- OPEN   VALVE-K (Microbone to Getter D-50)
-------------------------- open None (Microbone to Getter D-50) result=[(True, True)]
action=open, ok=True, locked=[False]
open () {'description': 'Microbone to Getter NP-10'}
open name=--- desc=Microbone to Getter NP-10
checking ownership. requestor=129.138.12.150
check software interlocks M
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open M ===>> OK
GetIndicatorState M ===>> OK
change switch state (True, True)
update switch state M True args=() kw={} ncanvase=3
01:29:05 -- OPEN   VALVE-M (Microbone to Getter NP-10)
-------------------------- open None (Microbone to Getter NP-10) result=[(True, True)]
action=open, ok=True, locked=[False]
close () {'description': 'CO2 Laser to Felix'}
close name=--- desc=CO2 Laser to Felix
checking ownership. requestor=129.138.12.150
check software interlocks F
interlocks []
actuate state mode=None-script, software_lock=True
VALVE-F(CO2 Laser to Felix) software locked
change switch state (True, False)
-------------------------- close None (CO2 Laser to Felix) result=[(True, False)]
action=close, ok=True, locked=[True]
open () {'description': 'CO2 Laser to Jan'}
open name=--- desc=CO2 Laser to Jan
checking ownership. requestor=129.138.12.150
check software interlocks A
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open A ===>> OK
GetIndicatorState A ===>> OK
change switch state (True, True)
update switch state A True args=() kw={} ncanvase=3
01:29:06 -- OPEN   VALVE-A (CO2 Laser to Jan)
-------------------------- open None (CO2 Laser to Jan) result=[(True, True)]
action=open, ok=True, locked=[False]
open () {'description': 'Microbone to CO2 Laser'}
open name=--- desc=Microbone to CO2 Laser
checking ownership. requestor=129.138.12.150
check software interlocks T
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open T ===>> OK
GetIndicatorState T ===>> OK
change switch state (True, True)
update switch state T True args=() kw={} ncanvase=3
01:29:07 -- OPEN   VALVE-T (Microbone to CO2 Laser)
-------------------------- open None (Microbone to CO2 Laser) result=[(True, True)]
action=open, ok=True, locked=[False]
executed snippet estimated_duration=0, duration=5.06205105782
PrepareForCO2Analysis.py completed successfully
gosub finished
set_motor ('beam', '1.0') {}
setting motor "beam" to 1.0
set motor beam to 1.0
SetMotor beam,1.0 ===>> OK
GetMotorMoving beam ===>> False
GetMotorMoving beam ===>> False
Block completed
move_to_position ('152',) {'autocenter': True}
FusionsCO2 move to position 152
sending GoToHole 152,True
GoToHole 152,True ===>> OK
GetDriveMoving ===>> OK
GetDriveMoving ===>> OK
GetDriveMoving ===>> OK
GetDriveMoving ===>> OK
GetDriveMoving ===>> OK
GetDriveMoving ===>> OK
GetDriveMoving ===>> OK
GetDriveMoving ===>> False
GetDriveMoving ===>> OK
GetDriveMoving ===>> OK
GetDriveMoving ===>> OK
GetDriveMoving ===>> OK
GetDriveMoving ===>> OK
GetDriveMoving ===>> OK
GetDriveMoving ===>> False
Block completed
GetAutoCorrecting ===>> False
GetAutoCorrecting ===>> False
Block completed
update position
GetPosition ===>> 13.95730,-3.98780,1.00000
got position (13.9573, -3.9878, 1.0)
move to position succeeded
sleep (5,) {}
SLEEP 5.0
block started
WaitControl setup for 5.0  
Join finished
block finished. duration 5.03424978256
close () {'description': 'Microbone to Turbo'}
close name=--- desc=Microbone to Turbo
checking ownership. requestor=129.138.12.150
check software interlocks U
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close U ===>> OK
GetIndicatorState U ===>> False
change switch state (True, True)
update switch state U False args=() kw={} ncanvase=3
01:29:19 -- CLOSE  VALVE-U (Microbone to Turbo)
-------------------------- close None (Microbone to Turbo) result=[(True, True)]
action=close, ok=True, locked=[False]
enable laser
enable () {}
set extraction state FusionsCO2 Enabled (False, 'red', 1.5)
enabling laser
Enable ===>> OK
begin interval
BEGIN INTERVAL Interval 1 waiting for 30.0
block started
WaitControl setup for 30.0  
set extract to 4.5
extract (4.5,) {}
GetPosition ===>> 13.95730,-3.98780,1.00000
set extraction state FusionsCO2 ON! 4.5(watts) (0.75, 'red', 1.5)
extract sample to 4.5 (watts)
set laser output
SetLaserOutput 4.5,watts ===>> OK
executing pattern triangle.lp
execute_pattern ('triangle.lp',) {}
executing pattern triangle.lp
IsPatterning ===>> OK
IsPatterning ===>> OK
IsPatterning ===>> OK
IsPatterning ===>> OK
IsPatterning ===>> OK
IsPatterning ===>> OK
IsPatterning ===>> OK
IsPatterning ===>> OK
IsPatterning ===>> OK
IsPatterning ===>> OK
IsPatterning ===>> OK
IsPatterning ===>> OK
IsPatterning ===>> OK
IsPatterning ===>> OK
IsPatterning ===>> OK
IsPatterning ===>> OK
IsPatterning ===>> OK
IsPatterning ===>> OK
IsPatterning ===>> OK
IsPatterning ===>> OK
IsPatterning ===>> OK
IsPatterning ===>> OK
IsPatterning ===>> OK
IsPatterning ===>> OK
IsPatterning ===>> OK
IsPatterning ===>> OK
IsPatterning ===>> OK
IsPatterning ===>> False
IsPatterning ===>> False
Block completed
COMPLETE INTERVAL waiting for Interval 1 to complete
Join finished
block finished. duration 30.1506011486
Interval 1 finished
end_extract () {}
ending extraction. set laser power to 0
set laser power 0
SetLaserPower 0 ===>> OK
disable () {}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% disable
set extraction state False (0.75, 'red', 1.5)
disabling laser
Disable ===>> OK
sleep (30.0,) {}
SLEEP 30.0
block started
WaitControl setup for 30.0  
Join finished
block finished. duration 30.1120929718
executed snippet estimated_duration=165.5, duration=78.0302069187
jan_co2.py completed successfully
GetAchievedOutput ===>> No Response
Requested Output= 0.000
Achieved Output=  0.000
GetResponseBlob ===>> No Response
GetOutputBlob ===>> No Response
persistence save...
persistence save - db
AutomatedRunPersister post_extraction_save deprecated
persistence save - dvc
no extraction position for 152
Extraction Finished
01:30:20 -- ******* Extraction Finished *******
no overlap. not waiting for min ms pumptime
01:30:20 -- Sending spectrometer configuration
======== Sending configuration ========
SetDeflection CDD,50.0 ===>> OK
SetDeflection H2,0.0 ===>> OK
SetDeflection H1,0.0 ===>> OK
SetDeflection L2,825.0 ===>> OK
SetDeflection L1,400.0 ===>> OK
SetDeflection AX,190.0 ===>> OK
SetZFocus 74.64 ===>> OK
SetZSymmetry -50.72 ===>> OK
SetExtractionLens 26.13 ===>> OK
SetIonRepeller -3.81 ===>> OK
SetElectronEnergy 75.08 ===>> OK
SetYSymmetry -2.81 ===>> OK
SetIonCounterVoltage 1590.0 ===>> OK
send trap current 200.0
GetParameter Trap Current Readback ===>> 197.923274125618
SetParameter Trap Current Set,200.0 ===>> OK
updating mftable name mftable
Using mftable located at /Users/jan/PychronDev/setupfiles/spectrometer/mftables/mftable.csv
============ MFtable ===========
Isotope  H2     H1     AX     L1     L2     CDD    
Ar40     5.8250 5.8786 5.9917 6.1649 6.2303 6.3931
Ar39     5.7242 5.7709 5.8841 6.0510 6.1154 6.2796
Ar36     5.4017 5.4399 5.5475 5.7098 5.7704 5.9307
================================
get initial guess parabolic
get initial guess parabolic
get initial guess parabolic
get initial guess parabolic
get initial guess parabolic
get initial guess parabolic
======== Configuration Finished ========
GetYSymmetry ===>> -2.81
GetZSymmetry ===>> -50.72
GetParameter Trap Current Readback ===>> 197.363852774217
GetHighVoltage ===>> 4499.94659342336
start measurement
do measurement
L#=65637 analysis type=unknown
Measurement Started jan_unknown120_60.py
01:30:20 -- ******* Measurement Started jan_unknown120_60.py *******
state changed from extraction to measurement
setting trap, emission, spec, defl, and gains
GetExtractionLens ===>> 26.13
GetYSymmetry ===>> -2.81
GetZSymmetry ===>> -50.72
GetZFocus ===>> 74.64
GetDeflection H2 ===>> 0
GetDeflection H1 ===>> 0
GetDeflection AX ===>> 190
GetDeflection L1 ===>> 400
GetDeflection L2 ===>> 825
GetDeflection CDD ===>> 50
GetGain H2 ===>> 0.0113
GetGain H1 ===>> 0.1
GetGain AX ===>> 0.09675
GetGain L1 ===>> 0.010355
GetGain L2 ===>> 0.095649
GetGain CDD ===>> 0
GetParameter Trap Current Readback ===>> 198.370811206739
GetParameter Source Current Readback ===>> 551.80662882256
pre measurement save
New frame /Users/jan/PychronDev/data/isotopes/86/6a794e-cf19-4016-ae99-e737f0aa447e.h5
flush and close file /Users/jan/PychronDev/data/isotopes/86/6a794e-cf19-4016-ae99-e737f0aa447e.h5
testing...
no interpolation path defined
executed snippet estimated_duration=226.132928, duration=0.0001540184021
unknown measurement script
activate_detectors ('H2', 'H1', 'AX', 'L1', 'L2', 'CDD') {}
activate detectors
*************** Set Analysis View Ar/Ar
create graphs
clearing graphs
clear isotope group
setting isotope det=H2, iso=Ar41
setting isotope det=H1, iso=Ar40
setting isotope det=AX, iso=Ar39
setting isotope det=L1, iso=Ar38
setting isotope det=L2, iso=Ar37
setting isotope det=CDD, iso=Ar36
setting previous blanks
 - setting Ar41 blank 0.029+/-0.006
 - setting Ar40 blank 0.276+/-0.007
 - setting Ar36 blank 0.00378+/-0.00019
 - setting Ar37 blank 0.056+/-0.005
 - setting Ar38 blank 0.0116+/-0.0020
 - setting Ar39 blank 0.045+/-0.009
load analysis view
position_magnet ('Ar40',) {'detector': 'H1'}
detector Detector(H1)
POSITION Ar40 H1
setting detector H2 to Ar41 (40.9624)
setting detector H1 to Ar40 (39.9624)
setting detector AX to Ar39 (38.9624)
setting detector L1 to Ar38 (37.9624)
setting detector L2 to Ar37 (36.9624)
setting detector CDD to Ar36 (35.9624)
Mapping mass to dac mass func: "parabolic"
H1 map mass coeffs = [-0.00063987  0.15840543  0.57023999]
H1 map mass to dac 39.9624 >> 5.87863
GetDeflection H1 ===>> 0
GetHighVoltage ===>> 4499.94659342336
positioning Ar40 (5.8785953813) on H1
setting magnet DAC
current  : 5.878595
requested: 5.878595
Delta Dac: 0.000001
Checking detector protection. dv=0.00000
Checking detector "CDD". Protection Threshold: 0.8 (V)
SetMagnetDAC 5.8785953813 ===>> OK
Magnet settling time: 0.500
Magnet settling started None
Magnet settling complete
set_dac. change=True
update labels <pychron.experiment.plot_panel.PlotPanel object at 0x184c5bf50>
update labels "<pychron.graph.stacked_regression_graph.StackedRegressionGraph object at 0x16e0f84d0>"
setting label 0 H2 Ar41
setting label 1 H1 Ar40
setting label 2 AX Ar39
setting label 3 L1 Ar38
setting label 4 L2 Ar37
setting label 5 CDD Ar36
update labels "<pychron.graph.stacked_graph.StackedGraph object at 0x16e0f83b0>"
setting label 0 H2 Ar41
setting label 1 H1 Ar40
setting label 2 AX Ar39
setting label 3 L1 Ar38
setting label 4 L2 Ar37
setting label 5 CDD Ar36
equilibrate () {'delay': 3, 'inlet': 'R', 'outlet': 'O', 'eqtime': 12.0}
Equilibration Started
01:30:21 -- ******* Equilibration Started *******
checking ownership. requestor=129.138.12.150
check software interlocks O
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close O ===>> OK
GetIndicatorState O ===>> False
change switch state (True, True)
update switch state O False args=() kw={} ncanvase=3
01:30:21 -- CLOSE  VALVE-O (Jan Ion Pump)
waiting 3s before opening inlet value ('R',)
checking ownership. requestor=129.138.12.150
check software interlocks R
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open R ===>> OK
GetIndicatorState R ===>> OK
change switch state (True, True)
update switch state R True args=() kw={} ncanvase=3
01:30:25 -- OPEN   VALVE-R (Jan Inlet)
equilibrating for 12.0sec
set_time_zero () {}
sniff (12.0,) {}
py_sniff
build tables- sniff [Detector(H2), Detector(H1), Detector(AX), Detector(L1), Detector(L2), Detector(CDD)]
add group /sniff/Ar41 (Group) '' table H2
add group /sniff/Ar40 (Group) '' table H1
add group /sniff/Ar39 (Group) '' table AX
add group /sniff/Ar38 (Group) '' table L1
add group /sniff/Ar37 (Group) '' table L2
add group /sniff/Ar36 (Group) '' table CDD
flush and close file /Users/jan/PychronDev/data/isotopes/86/6a794e-cf19-4016-ae99-e737f0aa447e.h5
measuring sniff. ncounts=12.0
"sniff" increment series count="1" fit count="0" regressing="False"
starting measurement
Equilibration Finished
01:30:37 -- ******* Equilibration Finished *******
checking ownership. requestor=129.138.12.150
check software interlocks R
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close R ===>> OK
State checksums do not match. Local:-1206722421 Remote:-1909275191
State checksum failed
GetIndicatorState R ===>> False
change switch state (True, True)
update switch state R False args=() kw={} ncanvase=3
01:30:38 -- CLOSE  VALVE-R (Jan Inlet)
Post Equilibration Started jan_pump_extraction_line.py
01:30:38 -- ******* Post Equilibration Started jan_pump_extraction_line.py *******
testing...
no interpolation path defined
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=4.0, duration=0.000150918960571
executed snippet estimated_duration=4.0, duration=0.0117700099945
Pump after analysis
doing GOSUB
testing...
no interpolation path defined
executed snippet estimated_duration=4.0, duration=0.000133037567139
Pump Microbone
close () {'description': 'Jan Inlet'}
close name=--- desc=Jan Inlet
checking ownership. requestor=129.138.12.150
check software interlocks R
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel False
Close R ===>> OK
GetIndicatorState R ===>> False
change switch state (True, True)
update switch state R False args=() kw={} ncanvase=3
01:30:38 -- CLOSE  VALVE-R (Jan Inlet)
-------------------------- close None (Jan Inlet) result=[(True, True)]
waiting for write to finish
measurement finished
estimated time: 12.583 actual time: :12.770
flush and close file /Users/jan/PychronDev/data/isotopes/86/6a794e-cf19-4016-ae99-e737f0aa447e.h5
set_fits () {}
using default fits file=/Users/jan/PychronDev/scripts/measurement/fits/nominal_linear.yaml
set "Ar41" to "('Average', 'SEM')"
set "Ar40" to "('Linear', 'SEM')"
set "Ar36" to "('Linear', 'SEM')"
set "Ar37" to "('linear', 'SEM')"
set "Ar38" to "('linear', 'SEM')"
set "Ar39" to "('Linear', 'SEM')"
set_baseline_fits () {}
using default fits file=/Users/jan/PychronDev/scripts/measurement/fits/nominal_linear.yaml
set "H2" to "('average', 'SEM')"
set "H1" to "('average', 'SEM')"
set "CDD" to "('average', 'SEM')"
set "L2" to "('average', 'SEM')"
set "L1" to "('average', 'SEM')"
set "AX" to "('average', 'SEM')"
multicollect () {'integration_time': 1, 'ncounts': 120}
build tables- signal [Detector(H2), Detector(H1), Detector(AX), Detector(L1), Detector(L2), Detector(CDD)]
add group /signal/Ar41 (Group) '' table H2
add group /signal/Ar40 (Group) '' table H1
add group /signal/Ar39 (Group) '' table AX
add group /signal/Ar38 (Group) '' table L1
add group /signal/Ar37 (Group) '' table L2
add group /signal/Ar36 (Group) '' table CDD
flush and close file /Users/jan/PychronDev/data/isotopes/86/6a794e-cf19-4016-ae99-e737f0aa447e.h5
measuring signal. ncounts=120
action=close, ok=True, locked=[False]
is_closed ('F',) {}
is F () closed?
is closed True
open () {'description': 'CO2 Laser to Jan'}
open name=--- desc=CO2 Laser to Jan
checking ownership. requestor=129.138.12.150
check software interlocks A
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open A ===>> OK
"signal" increment series count="2" fit count="1" regressing="True"
GetIndicatorState A ===>> OK
change switch state (True, True)
update switch state A True args=() kw={} ncanvase=3
01:30:39 -- OPEN   VALVE-A (CO2 Laser to Jan)
-------------------------- open None (CO2 Laser to Jan) result=[(True, True)]
action=open, ok=True, locked=[False]
sleep (1,) {}
SLEEP 1.0
starting measurement
close () {'description': 'CO2 Laser to Roughing'}
close name=--- desc=CO2 Laser to Roughing
checking ownership. requestor=129.138.12.150
check software interlocks G
interlocks []
actuate state mode=None-script, software_lock=True
VALVE-G(CO2 Laser to Roughing) software locked
change switch state (True, False)
-------------------------- close None (CO2 Laser to Roughing) result=[(True, False)]
action=close, ok=True, locked=[True]
open () {'description': 'Microbone to Turbo'}
open name=--- desc=Microbone to Turbo
checking ownership. requestor=129.138.12.150
check software interlocks U
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open U ===>> OK
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 1290.2025781472173}"
GetIndicatorState U ===>> OK
change switch state (True, True)
update switch state U True args=() kw={} ncanvase=3
01:30:40 -- OPEN   VALVE-U (Microbone to Turbo)
-------------------------- open None (Microbone to Turbo) result=[(True, True)]
action=open, ok=True, locked=[False]
open () {'description': 'Microbone to Getter NP-10'}
open name=--- desc=Microbone to Getter NP-10
checking ownership. requestor=129.138.12.150
check software interlocks M
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open M ===>> OK
GetIndicatorState M ===>> OK
change switch state (True, True)
update switch state M True args=() kw={} ncanvase=3
01:30:40 -- OPEN   VALVE-M (Microbone to Getter NP-10)
-------------------------- open None (Microbone to Getter NP-10) result=[(True, True)]
action=open, ok=True, locked=[False]
open () {'description': 'Microbone to Getter D-50'}
open name=--- desc=Microbone to Getter D-50
checking ownership. requestor=129.138.12.150
check software interlocks K
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 1297.6000512216383}"
Open K ===>> OK
GetIndicatorState K ===>> OK
change switch state (True, True)
update switch state K True args=() kw={} ncanvase=3
01:30:41 -- OPEN   VALVE-K (Microbone to Getter D-50)
-------------------------- open None (Microbone to Getter D-50) result=[(True, True)]
action=open, ok=True, locked=[False]
open () {'description': 'Microbone to CO2 Laser'}
open name=--- desc=Microbone to CO2 Laser
checking ownership. requestor=129.138.12.150
check software interlocks T
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open T ===>> OK
GetIndicatorState T ===>> OK
change switch state (True, True)
update switch state T True args=() kw={} ncanvase=3
01:30:42 -- OPEN   VALVE-T (Microbone to CO2 Laser)
-------------------------- open None (Microbone to CO2 Laser) result=[(True, True)]
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 1299.2893116936182}"
action=open, ok=True, locked=[False]
open () {'description': 'Microbone to Inlet Pipette'}
open name=--- desc=Microbone to Inlet Pipette
checking ownership. requestor=129.138.12.150
check software interlocks S
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open S ===>> OK
GetIndicatorState S ===>> OK
change switch state (True, True)
update switch state S True args=() kw={} ncanvase=3
01:30:43 -- OPEN   VALVE-S (Microbone to Inlet Pipette)
-------------------------- open None (Microbone to Inlet Pipette) result=[(True, True)]
action=open, ok=True, locked=[False]
sleep (1,) {}
SLEEP 1.0
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 1298.7072125427521}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.15978762651877562}"
set_resource () {'name': 'CO2PumpTimeFlag', 'value': 30}
Set CO2PumpTimeFlag 30 ===>> OK
release ('JanCO2Flag',) {}
release JanCO2Flag
Set JanCO2Flag 0 ===>> OK
executed snippet estimated_duration=6.0, duration=6.31003093719
PumpMicrobone.py completed successfully
gosub finished
get_resource_value () {'name': 'JanMiniboneFlag'}
Read JanMiniboneFlag ===>> 0
Get Resource Value JanMiniboneFlag=0.0
get resource value 0.0
get_resource_value () {'name': 'JanMiniboneFlag'}
Read JanMiniboneFlag ===>> 0
Get Resource Value JanMiniboneFlag=0.0
executed snippet estimated_duration=4.0, duration=6.32271909714
jan_pump_extraction_line.py completed successfully
Post Equilibration Finished
01:30:44 -- ******* Post Equilibration Finished *******
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 1298.5076130686384}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 1299.3824029615257}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 1299.5542073839356}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 1298.805971049126}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 1298.4533321610775}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.15978762651877562}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 1298.291401221162}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 1297.9791554637923}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 1297.7273598422232}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 1297.6159758819235}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 1297.4152475452865}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.15978762651877562}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 1297.4179293482612}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 1297.2991229614538}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 1297.0717593783631}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 1296.9515645763506}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 1296.934504968822}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.15978762651877562}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 1297.0684687487299}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 1297.253407280402}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 1297.3192987435114}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 1297.2643216851316}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 1297.210104610364}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.15978762651877562}"
01:31:04 -- collecting point 25
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 1297.2264023430819}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 1297.2208912306382}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 1297.107402367753}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 1297.0769140869734}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 1297.1356241236942}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.15978762651877562}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 1297.12815236149}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 1297.2016727715786}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 1297.2516779862788}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 1297.2587931426478}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 1297.1823128584201}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.15978762651877562}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 1297.116473135572}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 1297.0894185048305}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 1297.01363923037}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 1296.9988747847237}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 1297.0116279947645}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.15978762651877562}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 1297.011517529133}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 1296.9932832731297}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 1296.9832384410006}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 1296.9982082912443}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 1297.0535305334604}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.15978762651877562}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 1297.0608169698105}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 1297.0650564552911}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 1297.0435515785186}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 1297.005571222373}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 1296.996377928231}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.15978762651877562}"
01:31:30 -- collecting point 50
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 1296.9941011131154}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 1296.987225963869}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 1296.9744808329228}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 1296.9883166100356}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 1297.0044127596684}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.15978762651877562}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 1297.002032523239}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 1297.0005693075939}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 1296.9965862759607}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 1297.001242680949}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 1296.9931781000619}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.15978762651877562}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 1296.975902005346}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 1.3479290322560133}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 1296.965314275907}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 1.3464775106660967}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 1296.945538144736}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 1.3461098283164115}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 1296.9149773363583}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 1.3464191456341228}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 1296.8884023818455}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 1.3462487117256898}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.15978762651877562}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 1296.8478993934689}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 1.3454445239540027}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 1296.8458408102956}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 1.3448510071301958}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 1296.8234051882812}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 1.3444624850477842}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 1296.7954221684145}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 1.3457585890336845}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 1296.7809734840873}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 1.3458251082448762}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.15978762651877562}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 1296.810623493564}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 1.3458055738856236}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 1296.8114206499138}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 1.3460553716791193}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 1296.8063743625935}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 1.3461835207356567}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 1296.7997881485364}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 1.3469196611889236}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 1296.820501230443}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 1.3470770889305181}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.15978762651877562}"
01:31:57 -- collecting point 75
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 1296.8117543074195}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 1.3476386048632087}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 1296.7978405570984}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 1.3477522013712984}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 1296.7874639645968}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 1.3474612757368016}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 1296.7880625145553}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 1.3473792010044514}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 1296.7647252859579}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 1.3484158491765972}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.15978762651877562}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 1296.7481214412446}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 1.3483420091044194}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 1296.7207551664094}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 1.34845233553736}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 1296.716205464451}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 1.3487321862595216}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 1296.719445262253}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 1.3490894301911307}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 1296.7105029793966}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 1.348414094791581}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.15978762651877562}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 1296.717210379196}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 1.3491775868483464}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 1296.7227967717793}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 1.349054836049503}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 1296.7129814753253}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 1.3483092243186914}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 1296.7091747806908}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 1.3483368286237563}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 1296.7101690345062}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 1.348229728278303}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.15978762651877562}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 1296.7087015768384}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 1.3494411208473844}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 1296.7130508606156}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 1.3487465754562336}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 1296.7184907331246}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 1.348697060200433}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 1296.7180903643552}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 1.3484744553692258}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 1296.7028995095154}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 1.3489430775230802}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.15978762651877562}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 1296.7061497195937}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 1.3487569840252138}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 1296.7029475649128}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 1.349272131287334}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 1296.6989042607142}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 1.3494383505592478}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 1296.69978582861}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 1.3489908591974806}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 1296.6931440170702}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 1.3491853974962675}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.15978762651877562}"
01:32:23 -- collecting point 100
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 1296.6853489851662}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 1.3489453547432928}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 1296.6650982389388}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 1.3492188950063337}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 1296.6451584641031}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 1.3492816338833797}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 1296.6237902393082}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 1.3490514112505867}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 1296.6062307710793}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 1.3494491370793413}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.15978762651877562}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 1296.5893134807807}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 1.3489781877439713}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 1296.5806661033075}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 1.348308445362703}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 1296.5679002236964}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 1.3487964524270197}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 1296.5521675081702}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 1.3482773285579437}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 1296.545702627513}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 1.3480573407394127}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.15978762651877562}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 1296.539889956971}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 1.3480277023680634}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 1296.5260078153008}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 1.348007516668633}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 1296.5229368695273}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 1.3477745905880452}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 1296.521006161334}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 1.3475957402389624}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 1296.5071241066962}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 1.3473700888871185}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.15978762651877562}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 1296.4965829498947}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 1.3474981616486852}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 1296.5005453874846}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 1.3471732759751816}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 1296.487229456508}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 1.3470772454720972}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 1296.4799930691943}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 1.3471507690690596}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 1296.4632537707434}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 1.346595711082837}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.15978762651877562}"
waiting for write to finish
measurement finished
estimated time: 125.829 actual time: :126.357
flush and close file /Users/jan/PychronDev/data/isotopes/86/6a794e-cf19-4016-ae99-e737f0aa447e.h5
baselines () {'settling_time': 15.0, 'detector': 'H1', 'mass': 34.2, 'ncounts': 60}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Baseline
build tables- baseline [Detector(H2), Detector(H1), Detector(AX), Detector(L1), Detector(L2), Detector(CDD)]
add group baseline table H2
add group baseline table H1
add group baseline table AX
add group baseline table L1
add group baseline table L2
add group baseline table CDD
flush and close file /Users/jan/PychronDev/data/isotopes/86/6a794e-cf19-4016-ae99-e737f0aa447e.h5
detector Detector(H1)
POSITION 34.2 H1
Mapping mass to dac mass func: "parabolic"
H1 map mass coeffs = [-0.00063987  0.15840543  0.57023999]
H1 map mass to dac 34.2 >> 5.23928599104
GetDeflection H1 ===>> 0
GetHighVoltage ===>> 4499.94659342336
positioning 34.2 (5.23925513738) on H1
setting magnet DAC
current  : 5.878595
requested: 5.239255
Delta Dac: 0.639340
Checking detector protection. dv=0.63934
Checking detector "CDD". Protection Threshold: 0.8 (V)
SetMagnetDAC 5.23925513738 ===>> OK
Magnet settling time: 0.500
Magnet settling started None
Magnet settling complete
set_dac. change=True
Delaying 15.0s for detectors to settle
Join finished
measuring baseline. ncounts=60
"baseline" increment series count="2" fit count="1" regressing="True"
starting measurement
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 1296.456339714348}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 1296.5592917181325}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 1296.5327629243836}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 1296.5182515058857}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.09787583498076516}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 1296.5138068539525}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 1296.5068145724563}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 1296.5071092171852}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 1296.5064921289916}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 1296.501613017594}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.11451432327240653}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 1296.4942885683026}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 1296.4892088012673}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 1296.4845105160855}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 1296.4883951758352}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 1296.4864284830378}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.12969885782880677}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 1296.4831851858396}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 1296.4814766479592}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 1296.4766004138764}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 1296.4702399567454}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 1296.4645490214177}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.15157831944881034}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 1296.4624692308366}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 1296.4584331136386}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 1296.454561580922}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 1296.4524834756342}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 1296.4554445487518}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1606827921147284}"
01:33:27 -- collecting point 25
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 1296.4583872455014}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 1296.4588624787457}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 1296.4576389756733}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 1296.45666942761}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 1296.4566711675889}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.15945617327775882}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 1296.4566727915692}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 1296.4553599561732}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 1296.456970854649}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 1296.456401210595}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 1296.457501792367}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.15862554849938953}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 1296.4583969870882}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 1296.4569147168104}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 1296.457140412507}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 1296.45558241165}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 1296.4558591542598}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1602681866066987}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 1296.4553847886245}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 1296.454282454379}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 1296.453915640295}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 1296.4550356735351}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 1296.4554889488516}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1606383920151263}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 1296.4548465134574}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 1296.4531390366653}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 1296.4522508442274}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 1296.450884382025}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 1296.4509218713672}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1652054694994206}"
01:33:53 -- collecting point 50
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 1296.450344128425}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 1296.4506076857235}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 1296.4504660233436}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 1296.4496579109084}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 1296.4506487406543}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.16547860021234206}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 1296.4504587651531}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 1296.4499301050953}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 1296.4495907532394}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 1296.4501659305904}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 1296.4501675671006}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.16595977376606535}"
waiting for write to finish
measurement finished
estimated time: 62.915 actual time: :63.204
flush and close file /Users/jan/PychronDev/data/isotopes/86/6a794e-cf19-4016-ae99-e737f0aa447e.h5
activate_detectors ('H1', 'AX', 'CDD') {'peak_center': True}
peak_center () {'detector': 'H1', 'integration_time': 0.262144, 'isotope': 'Ar40'}
peak center: mean=1239.73046965 threshold=3
peak center started
setup peak center. detector=['H1', 'AX', 'CDD'], isotope=Ar40
VersionedUnpickler [<apptools.sweet_pickle.versioned_unpickler.VersionedUnpickler object at 0x1693bd590>] using Updater [<apptools.sweet_pickle.updater.Updater object at 0x119ae0530>]
VersionedUnpickler [<apptools.sweet_pickle.versioned_unpickler.VersionedUnpickler object at 0x1693bd590>] using Updater [<apptools.sweet_pickle.updater.Updater object at 0x119ae0530>]
VersionedUnpickler [<apptools.sweet_pickle.versioned_unpickler.VersionedUnpickler object at 0x188696830>] using Updater [<apptools.sweet_pickle.updater.Updater object at 0x119ae0530>]
Mapping mass to dac mass func: "parabolic"
H1 map mass coeffs = [-0.00063987  0.15840543  0.57023999]
H1 map mass to dac 39.9624 >> 5.87863
GetDeflection H1 ===>> 0
GetHighVoltage ===>> 4499.94659342336
do peak center. <pychron.spectrometer.jobs.peak_center.PeakCenter object at 0x125e26d70>
doing pc
starting peak center. center dac= 5.8785953813 step_width=0.0015
width = 0.0015
get scan parameters. half-width=0.015,window=0.015, i=0, scalar=1
Scan parameters center=5.87860 width=0.03000 (5.86360 - 5.89360)
Moving to starting dac 5.8635953813
setting magnet DAC
current  : 5.239255
requested: 5.863595
Delta Dac: 0.624340
Checking detector protection. dv=0.62434
Checking detector "CDD". Protection Threshold: 0.8 (V)
SetMagnetDAC 5.8635953813 ===>> OK
Magnet settling time: 0.500
Magnet settling started None
Magnet settling complete
set_dac. change=True
Wait until signal near baseline. tol= 0.135219273334. timeout= 10
Peak center failed to move to a baseline position
_do_sweep sm= 5.8635953813, em= 5.8935953813, stm= 0.0015
calculated step values: start=5.8635953813, end=5.8935953813, width=0.0015, nsteps=21.0
setting magnet DAC
current  : 5.863595
requested: 5.863595
Delta Dac: 0.000000
Checking detector protection. dv=0.00000
Checking detector "CDD". Protection Threshold: 0.8 (V)
SetMagnetDAC 5.8635953813 ===>> OK
set_dac. change=False
setting magnet DAC
current  : 5.863595
requested: 5.865174
Delta Dac: 0.001579
Checking detector protection. dv=0.00158
Checking detector "CDD". Protection Threshold: 0.8 (V)
SetMagnetDAC 5.86517432867 ===>> OK
Magnet settling time: 2.097
Magnet settling started None
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.865174
requested: 5.866753
Delta Dac: 0.001579
Checking detector protection. dv=0.00158
Checking detector "CDD". Protection Threshold: 0.8 (V)
SetMagnetDAC 5.86675327604 ===>> OK
Magnet settling time: 2.097
Magnet settling started None
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.866753
requested: 5.868332
Delta Dac: 0.001579
Checking detector protection. dv=0.00158
Checking detector "CDD". Protection Threshold: 0.8 (V)
SetMagnetDAC 5.8683322234 ===>> OK
Magnet settling time: 2.097
Magnet settling started None
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.868332
requested: 5.869911
Delta Dac: 0.001579
Checking detector protection. dv=0.00158
Checking detector "CDD". Protection Threshold: 0.8 (V)
SetMagnetDAC 5.86991117077 ===>> OK
Magnet settling time: 2.097
Magnet settling started None
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.869911
requested: 5.871490
Delta Dac: 0.001579
Checking detector protection. dv=0.00158
Checking detector "CDD". Protection Threshold: 0.8 (V)
SetMagnetDAC 5.87149011814 ===>> OK
Magnet settling time: 2.097
Magnet settling started None
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.871490
requested: 5.873069
Delta Dac: 0.001579
Checking detector protection. dv=0.00158
Checking detector "CDD". Protection Threshold: 0.8 (V)
SetMagnetDAC 5.87306906551 ===>> OK
Magnet settling time: 2.097
Magnet settling started None
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.873069
requested: 5.874648
Delta Dac: 0.001579
Checking detector protection. dv=0.00158
Checking detector "CDD". Protection Threshold: 0.8 (V)
SetMagnetDAC 5.87464801288 ===>> OK
Magnet settling time: 2.097
Magnet settling started None
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.874648
requested: 5.876227
Delta Dac: 0.001579
Checking detector protection. dv=0.00158
Checking detector "CDD". Protection Threshold: 0.8 (V)
SetMagnetDAC 5.87622696025 ===>> OK
Magnet settling time: 2.097
Magnet settling started None
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.876227
requested: 5.877806
Delta Dac: 0.001579
Checking detector protection. dv=0.00158
Checking detector "CDD". Protection Threshold: 0.8 (V)
SetMagnetDAC 5.87780590761 ===>> OK
Magnet settling time: 2.097
Magnet settling started None
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.877806
requested: 5.879385
Delta Dac: 0.001579
Checking detector protection. dv=0.00158
Checking detector "CDD". Protection Threshold: 0.8 (V)
SetMagnetDAC 5.87938485498 ===>> OK
Magnet settling time: 2.097
Magnet settling started None
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.879385
requested: 5.880964
Delta Dac: 0.001579
Checking detector protection. dv=0.00158
Checking detector "CDD". Protection Threshold: 0.8 (V)
SetMagnetDAC 5.88096380235 ===>> OK
Magnet settling time: 2.097
Magnet settling started None
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.880964
requested: 5.882543
Delta Dac: 0.001579
Checking detector protection. dv=0.00158
Checking detector "CDD". Protection Threshold: 0.8 (V)
SetMagnetDAC 5.88254274972 ===>> OK
Magnet settling time: 2.097
Magnet settling started None
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.882543
requested: 5.884122
Delta Dac: 0.001579
Checking detector protection. dv=0.00158
Checking detector "CDD". Protection Threshold: 0.8 (V)
SetMagnetDAC 5.88412169709 ===>> OK
Magnet settling time: 2.097
Magnet settling started None
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.884122
requested: 5.885701
Delta Dac: 0.001579
Checking detector protection. dv=0.00158
Checking detector "CDD". Protection Threshold: 0.8 (V)
SetMagnetDAC 5.88570064446 ===>> OK
Magnet settling time: 2.097
Magnet settling started None
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.885701
requested: 5.887280
Delta Dac: 0.001579
Checking detector protection. dv=0.00158
Checking detector "CDD". Protection Threshold: 0.8 (V)
SetMagnetDAC 5.88727959183 ===>> OK
Magnet settling time: 2.097
Magnet settling started None
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.887280
requested: 5.888859
Delta Dac: 0.001579
Checking detector protection. dv=0.00158
Checking detector "CDD". Protection Threshold: 0.8 (V)
SetMagnetDAC 5.88885853919 ===>> OK
Magnet settling time: 2.097
Magnet settling started None
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.888859
requested: 5.890437
Delta Dac: 0.001579
Checking detector protection. dv=0.00158
Checking detector "CDD". Protection Threshold: 0.8 (V)
SetMagnetDAC 5.89043748656 ===>> OK
Magnet settling time: 2.097
Magnet settling started None
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.890437
requested: 5.892016
Delta Dac: 0.001579
Checking detector protection. dv=0.00158
Checking detector "CDD". Protection Threshold: 0.8 (V)
SetMagnetDAC 5.89201643393 ===>> OK
Magnet settling time: 2.097
Magnet settling started None
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.892016
requested: 5.893595
Delta Dac: 0.001579
Checking detector protection. dv=0.00158
Checking detector "CDD". Protection Threshold: 0.8 (V)
SetMagnetDAC 5.8935953813 ===>> OK
Magnet settling time: 2.097
Magnet settling started None
Magnet settling complete
set_dac. change=True
result of _do_sweep=True
result of _calculate_peak_center=([5.8712005917200214, 5.8788058021408638, 5.8864110125617053], [873.82874676266783, 1185.682467471041, 869.24334226975338], 5.8762206318001819, 1185.682467471041)
new center pos Detector(H1) (Ar40) @ 5.87880580214
GetHighVoltage ===>> 4499.94659342336
GetDeflection H1 ===>> 0
dac uncorrected for HV and deflection 5.87884042208
update mftable H1 Ar40 5.87884042208 message=automated run peakcenter
get initial guess parabolic
get initial guess parabolic
get initial guess parabolic
get initial guess parabolic
get initial guess parabolic
get initial guess parabolic
dump mftable to /Users/jan/PychronDev/setupfiles/spectrometer/mftables/mftable.csv
add to repo msg=modified - automated run peakcenter
sweep finished
locally archiving mftable
setting magnet DAC
current  : 5.893595
requested: 5.878806
Delta Dac: 0.014790
Checking detector protection. dv=0.01479
Checking detector "CDD". Protection Threshold: 0.8 (V)
SetMagnetDAC 5.87880580214 ===>> OK
Magnet settling time: 0.500
Magnet settling started None
Magnet settling complete
set_dac. change=True
flush and close file /Users/jan/PychronDev/data/isotopes/86/6a794e-cf19-4016-ae99-e737f0aa447e.h5
finished measure script
executed snippet estimated_duration=226.132928, duration=278.901365995
jan_unknown120_60.py completed successfully
Measurement Finished
01:34:59 -- ******* Measurement Finished *******
Post Measurement Started jan_pump_ms.py
01:34:59 -- ******* Post Measurement Started jan_pump_ms.py *******
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=4.6968460083e-05
Pumping spectrometer
open () {'name': 'O'}
open name=O desc=---
checking ownership. requestor=129.138.12.150
check software interlocks O
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open O ===>> OK
GetIndicatorState O ===>> OK
change switch state (True, True)
update switch state O True args=() kw={} ncanvase=3
01:34:59 -- OPEN   VALVE-O (Jan Ion Pump)
-------------------------- open O () result=[(True, True)]
action=open, ok=True, locked=[False]
executed snippet estimated_duration=0, duration=0.37920999527
jan_pump_ms.py completed successfully
setting _ms_pumptime
Post Measurement Finished
01:35:00 -- ******* Post Measurement Finished *******
$$$$$$$$$$$$$$$$$$$$ state at run end measurement
state changed from measurement to success
post measurement save measured=True aborted=False
Set filtering
setting fod for Ar41= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
setting fod for H2= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
setting fod for Ar40= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
setting fod for H1= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
setting fod for Ar36= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
setting fod for CDD= {'filter_outliers': True, 'std_devs': 10, 'iterations': 1}
setting fod for Ar37= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
setting fod for L2= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
setting fod for Ar38= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
setting fod for L1= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
setting fod for Ar39= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
setting fod for AX= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
persistence save...
persistence save - db
post measurement save
6117563952 connecting to database sqlite:////Users/jan/PychronDev/.appdata/local_lab.db
connected to db sqlite:////Users/jan/PychronDev/.appdata/local_lab.db
create new session 6117563952
close session 6117563952
No database instance. Not saving post measurement to isotopedb database
$$$$$$$$$$$$$$$ auto_save_detector_ic=False
massspec enabled True
create new session 4724807920
MassSpec Database Version: 16.0
close session 4724807920
saving post measurement to secondary database
saving to massspec database 129.138.12.160/massspecdata
setting labnumber to 65637
setting aliquot to 5
setting step to 
setting uuid to 866a794e-cf19-4016-ae99-e737f0aa447e
setting irradpos to 65637
setting extract_device to Fusions CO2
setting tray to 
setting position to 152
setting power_requested to 4.5
setting extract_value to 4.5
setting duration to 30.0
setting duration_at_request to 30.0
setting first_stage_delay to 30.0
setting cleanup to 30.0
setting comment to D:18
setting irradiation to NM-290
setting level to D
setting irradiation_level to D
setting sample to 16-DJ-25
setting material to Sanidine
setting project to IR1005
setting mass_spectrometer to Jan
no attribute chron_dosages
no attribute production_ratios
no attribute interference_corrections
no attribute production_name
no attribute j
Reference Isotope=Ar40
Reference Detector=H1
%%%%%%%%%%%%%%%%%%%% Comment: D:18 %%%%%%%%%%%%%%%%%%%
adding isotope Ar41 H2
add baseline dbdet= Ar41. original det= H2
get baseline data Ar41 H2
Get data baseline <pychron.processing.isotope.Baseline object at 0x17b846710> len t=60
baseline Ar41. v=-0.195023801396, e=0.00582929147068
get signal data Ar41 H2
Get data signal Ar41 0.070+/-0.005 len t=120
adding isotope Ar40 H1
add baseline dbdet= Ar40. original det= H1
get baseline data Ar40 H1
Get data baseline <pychron.processing.isotope.Baseline object at 0x17b846ed0> len t=60
baseline Ar40. v=0.169285082093, e=0.00568968821577
get signal data Ar40 H1
Get data signal Ar40 1296.68+/-0.07 len t=120
adding isotope Ar39 AX
add baseline dbdet= Ar39. original det= AX
get baseline data Ar39 AX
Get data baseline <pychron.processing.isotope.Baseline object at 0x17b846bd0> len t=60
baseline Ar39. v=-0.0758064798005, e=0.00678488587599
get signal data Ar39 AX
Get data signal Ar39 183.457+/-0.023 len t=120
adding isotope Ar38 L1
add baseline dbdet= Ar38. original det= L1
get baseline data Ar38 L1
Get data baseline <pychron.processing.isotope.Baseline object at 0x17b846b10> len t=60
baseline Ar38. v=-0.0295951204439, e=0.00291161148852
get signal data Ar38 L1
Get data signal Ar38 2.622+/-0.006 len t=120
adding isotope Ar37 L2
add baseline dbdet= Ar37. original det= L2
get baseline data Ar37 L2
Get data baseline <pychron.processing.isotope.Baseline object at 0x169499f50> len t=60
baseline Ar37. v=-0.0161741922754, e=0.00676657855885
get signal data Ar37 L2
Get data signal Ar37 1.317+/-0.009 len t=120
adding isotope Ar36 CDD
add baseline dbdet= Ar36. original det= CDD
get baseline data Ar36 CDD
Get data baseline <pychron.processing.isotope.Baseline object at 0x169499e10> len t=60
baseline Ar36. v=0.000356482576366, e=2.97326905305e-05
get signal data Ar36 CDD
Get data signal Ar36 1.3484+/-0.0026 len t=120
65637-05 added analysis time 0.476701974869s
analysis added to mass spec database
mass spec save time= 0.487
persistence save - dvc
================= post measurement started
create new session 4939153776
close session 4939153776
---------------- Experiment Queue saving disabled
DVC saving peakcenter
Smart pull ahead: 0 behind: 0
Up-to-date with origin
add to repo msg=modified - ad8224ebc6dbfeb9f5997218dfa5fe690569839d.json
add to repo msg=modified - 37-05.json
add to repo msg=modified - 37-05.dat.json
add to repo msg=modified - 37-05.blan.json
add to repo msg=modified - 37-05.inte.json
add to repo msg=modified - 37-05.icfa.json
add to repo msg=modified - 37-05.base.json
not at valid file /Users/jan/PychronDev/data/.dvc/repositories/C_Henry/656/tags/37-05.tags.json
add to repo msg=modified - 37-05.peak.json
add to repo msg=modified - 37-05.extr.json
not at valid file /Users/jan/PychronDev/data/.dvc/repositories/C_Henry/656/monitor/37-05.moni.json
commit message=<COLLECTION>
add to repo msg=modified - 37-05.inte.json
add to repo msg=modified - 37-05.base.json
commit message=<ISOEVO> default collection fits
add to repo msg=modified - 37-05.blan.json
commit message=<BLANKS> preceding bc-02-J-552
add to repo msg=modified - 37-05.icfa.json
commit message=<ICFactor> default
push repository <pychron.git_archive.repo_manager.GitRepoManager object at 0x16c519170>
pushing to remote=origin, url=https://github.com
no changes to meta repo
create new session 4939153776
add association C_Henry
get identifier "65637"
setting analysis irradiation position=<pychron.dvc.dvc_orm.IrradiationPositionTbl object at 0x1721e63d0>
close session 4939153776
================= post measurement finished
01:35:13 -- ******* Post Run Check *******
loading queue conditionals post_run_actions
loading system conditionals post_run_actions
loading conditionals from /Users/jan/PychronDev/setupfiles/spectrometer/default_conditionals.yaml
loading queue conditionals post_run_terminations
loading system conditionals post_run_terminations
loading conditionals from /Users/jan/PychronDev/setupfiles/spectrometer/default_conditionals.yaml
Checking default post run terminations n=1
GetDeflection CDD ===>> 50
testing CDD==2000
evaluate ot="CDD.deflection==2000" t="CDD==2000", ctx="{'CDD': 50.0}"
01:35:13 -- ******* Post Run Check Passed *******
01:35:13 -- Automated run 65637-05 success duration: 374.954 s
----------------- finish -----------------
----------------- stop -----------------
retroactive repository identifiers disabled
finish run. runs completed=30
update duration runid=65637-05, duration=374.953953981, md5=301e91d8
loading script "jan_unknown120_60.py"
loading script "jan_pump_ms.py"
loading script "jan_co2.py"
loading script "jan_pump_extraction_line.py"
testing...
no interpolation path defined
executed snippet estimated_duration=213.652928, duration=0.000276803970337
script duration name:unknown120_60 seconds:214.0
loading script "jan_unknown120_60.py"
loading script "jan_pump_ms.py"
loading script "jan_co2.py"
loading script "jan_pump_extraction_line.py"
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=2.50339508057e-05
loading script "jan_unknown120_60.py"
loading script "jan_pump_ms.py"
loading script "jan_co2.py"
loading script "jan_pump_extraction_line.py"
testing...
no interpolation path defined
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=5.69820404053e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=9.89437103271e-05
executed snippet estimated_duration=0.0, duration=0.00832104682922
script duration name:co2 seconds:0.0
loading script "jan_unknown120_60.py"
loading script "jan_pump_ms.py"
loading script "jan_co2.py"
loading script "jan_pump_extraction_line.py"
testing...
no interpolation path defined
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=4.0, duration=0.000205993652344
executed snippet estimated_duration=4.0, duration=0.00360512733459
Script duration 214.0
Run total estimated duration= 215.000
unknown120_60 in script context. using previous estimated duration
script duration name:unknown120_60 seconds:214.0
pump_ms in script context. using previous estimated duration
co2 in script context. using previous estimated duration
script duration name:co2 seconds:0.0
pump_extraction_line in script context. using previous estimated duration
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
loading script "jan_unknown400_120.py"
loading script "jan_pump_ms.py"
loading script "jan_co2.py"
loading script "jan_pump_extraction_line.py"
testing...
no interpolation path defined
executed snippet estimated_duration=556.052928, duration=0.000309944152832
script duration name:unknown400_120 seconds:556.0
script duration name:co2 seconds:0.0
Script duration 556.0
Run total estimated duration= 557.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
unknown400_120 in script context. using previous estimated duration
script duration name:unknown400_120 seconds:556.0
loading script "jan_unknown400_120.py"
loading script "jan_pump_ms.py"
loading script "jan_sniffair_x2.py"
loading script "jan_pump_extraction_line.py"
testing...
no interpolation path defined
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=5.3882598877e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=0.000192165374756
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=32.0, duration=0.000102043151855
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=34.0, duration=0.000136137008667
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=4.0, duration=6.69956207275e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=36.0, duration=9.48905944824e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=34.0, duration=0.000120162963867
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=4.0, duration=7.79628753662e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=36.0, duration=0.000105142593384
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=70.0, duration=0.000113964080811
executed snippet estimated_duration=250.0, duration=0.0349400043488
script duration name:sniffair_x2 seconds:250.0
Script duration 806.0
Run total estimated duration= 807.000
script duration name:unknown400_120 seconds:556.0
sniffair_x2 in script context. using previous estimated duration
script duration name:sniffair_x2 seconds:250.0
Script duration 806.0
Run total estimated duration= 807.000
script duration name:unknown120_60 seconds:214.0
loading script "jan_unknown120_60.py"
loading script "jan_pump_ms.py"
loading script "jan_cocktail_x1.py"
loading script "jan_pump_extraction_line.py"
testing...
no interpolation path defined
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=5.3882598877e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=0.000121831893921
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=32.0, duration=0.000103950500488
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=34.0, duration=0.000120162963867
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=4.0, duration=7.10487365723e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=38.0, duration=0.000120878219604
executed snippet estimated_duration=108.0, duration=0.025267124176
script duration name:cocktail_x1 seconds:108.0
Script duration 322.0
Run total estimated duration= 323.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown400_120 seconds:556.0
script duration name:co2 seconds:0.0
Script duration 556.0
Run total estimated duration= 557.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
cocktail_x1 in script context. using previous estimated duration
script duration name:cocktail_x1 seconds:108.0
Script duration 322.0
Run total estimated duration= 323.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown400_120 seconds:556.0
script duration name:co2 seconds:0.0
Script duration 556.0
Run total estimated duration= 557.000
script duration name:unknown400_120 seconds:556.0
script duration name:sniffair_x2 seconds:250.0
Script duration 806.0
Run total estimated duration= 807.000
script duration name:unknown400_120 seconds:556.0
script duration name:sniffair_x2 seconds:250.0
Script duration 806.0
Run total estimated duration= 807.000
script duration name:unknown400_120 seconds:556.0
script duration name:cocktail_x1 seconds:108.0
Script duration 664.0
Run total estimated duration= 665.000
script duration name:unknown120_60 seconds:214.0
script duration name:cocktail_x1 seconds:108.0
Script duration 322.0
Run total estimated duration= 323.000
script duration name:unknown400_120 seconds:556.0
script duration name:co2 seconds:0.0
Script duration 556.0
Run total estimated duration= 557.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:cocktail_x1 seconds:108.0
Script duration 322.0
Run total estimated duration= 323.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown400_120 seconds:556.0
script duration name:sniffair_x2 seconds:250.0
Script duration 806.0
Run total estimated duration= 807.000
script duration name:unknown400_120 seconds:556.0
script duration name:sniffair_x2 seconds:250.0
Script duration 806.0
Run total estimated duration= 807.000
script duration name:unknown120_60 seconds:214.0
script duration name:cocktail_x1 seconds:108.0
Script duration 322.0
Run total estimated duration= 323.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown400_120 seconds:556.0
script duration name:co2 seconds:0.0
Script duration 556.0
Run total estimated duration= 557.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown400_120 seconds:556.0
script duration name:cocktail_x1 seconds:108.0
Script duration 664.0
Run total estimated duration= 665.000
script duration name:unknown120_60 seconds:214.0
script duration name:cocktail_x1 seconds:108.0
Script duration 322.0
Run total estimated duration= 323.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
nruns=67 before=5.0, run_dur=21215.0, btw=2970.0
write rem/ex queues
/Users/jan/PychronDev/experiments/rem/CurrentExperiment.rem.txt
/Users/jan/PychronDev/experiments/rem/CurrentExperiment.ex.txt
doing event level: 3

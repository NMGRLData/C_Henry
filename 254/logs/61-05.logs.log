do run
loading script "jan_unknown120_60.py"
loading script "jan_pump_ms.py"
loading script "jan_co2.py"
loading script "jan_pump_extraction_line.py"
testing...
no interpolation path defined
executed snippet estimated_duration=213.652928, duration=0.00031304359436
script duration name:unknown120_60 seconds:214.0
loading script "jan_unknown120_60.py"
loading script "jan_pump_ms.py"
loading script "jan_co2.py"
loading script "jan_pump_extraction_line.py"
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=2.31266021729e-05
loading script "jan_unknown120_60.py"
loading script "jan_pump_ms.py"
loading script "jan_co2.py"
loading script "jan_pump_extraction_line.py"
testing...
no interpolation path defined
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=4.50611114502e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=9.20295715332e-05
executed snippet estimated_duration=0.0, duration=0.00183081626892
script duration name:co2 seconds:0.0
loading script "jan_unknown120_60.py"
loading script "jan_pump_ms.py"
loading script "jan_co2.py"
loading script "jan_pump_extraction_line.py"
testing...
no interpolation path defined
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=4.0, duration=0.000141143798828
executed snippet estimated_duration=4.0, duration=0.00101900100708
Script duration 214.0
Run total estimated duration= 215.000
run duration: 0:03:35
doing event level: 2
13:14:04 -- Setting default integration. t=1.048576
setting integration time = 1.048576
SetIntegrationTime 1.048576 ===>> OK
----------------- start -----------------
**************** Experiment Type: Ar/Ar, Ar/Ar
create new session 4963382960
close session 4963382960
$$$$$ Clearing conditionals
adding conditionals 
Add queue conditionals
add default conditionals
adding default conditionals from /Users/jan/PychronDev/setupfiles/spectrometer/default_conditionals.yaml
Start automated run 25461-05
loading script "jan_unknown120_60.py"
loading script "jan_pump_ms.py"
loading script "jan_co2.py"
loading script "jan_pump_extraction_line.py"
%%%%%%%%%%%%%%%%%% setting automated run 25461-05
No value "sensitivity_multiplier" in metadata
$$$$$$$$$$$$$$$ auto_save_detector_ic=False
============================= Pre Extraction Check =============================
loading queue conditionals pre_run_terminations
loading system conditionals pre_run_terminations
loading conditionals from /Users/jan/PychronDev/setupfiles/spectrometer/default_conditionals.yaml
13:14:04 -- ******* Pre Extraction Check *******
Get a measurement from the spectrometer
Pre Extraction Termination data. keys=H2,H1,AX,L1,L2,CDD, signals=-0.13426,0.12777,0.01302,-0.00504,0.00291,0.00331
13:14:04 -- testing system defined conditionals
Checking default pre extraction terminations n=2
testing CDD
evaluate ot="CDD.inactive" t="CDD", ctx="{'CDD': False}"
GetDeflection CDD ===>> 50
testing CDD==2000
evaluate ot="CDD.deflection==2000" t="CDD==2000", ctx="{'CDD': 50.0}"
13:14:04 -- ******* Pre Extraction Check Passed *******
=================================================================================
13:14:04 -- stopping status monitor
stop 4940304848
Status monitor stopped
Status monitor finished
13:14:05 -- starting status monitor
start 4940304848
StatusMonitor period=1. Frequencies(state=2, checksum=3, lock=5, owner=5)
start extraction
do extraction
Analysis started at 13:14:07.392097
Extraction Started jan_co2.py
13:14:07 -- ******* Extraction Started jan_co2.py *******
state changed from not run to extraction
DO EXTRACTION <pychron.extraction_line.pyscript_runner.RemotePyScriptRunner object at 0x12e829b90>
testing...
no interpolation path defined
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=5.41210174561e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=8.79764556885e-05
executed snippet estimated_duration=100.0, duration=0.00292015075684
Jan CO2 laser analysis
doing GOSUB
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=3.69548797607e-05
Waiting for CO2 access
wait ('FelixCO2Flag', 0) {}
waiting for FelixCO2Flag = 0
Read FelixCO2Flag ===>> 0
finished waiting
CO2 free
wait ('CO2PumpTimeFlag', 0) {}
waiting for CO2PumpTimeFlag = 0
Read CO2PumpTimeFlag ===>> 0
finished waiting
acquire ('JanCO2Flag',) {'clear': True}
acquire JanCO2Flag
Set JanCO2Flag 1 ===>> OK
JanCO2Flag acquired
set extraction state False (0.75, 'red', 1.5)
CO2 acquired
executed snippet estimated_duration=0, duration=0.016900062561
WaitForCO2Access.py completed successfully
gosub finished
doing GOSUB
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=0.000116109848022
Prepare for CO2 analysis
close () {'description': 'Jan Inlet'}
close name=--- desc=Jan Inlet
checking ownership. requestor=129.138.12.150
check software interlocks R
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel False
Close R ===>> OK
GetIndicatorState R ===>> False
change switch state (True, True)
update switch state R False args=() kw={} ncanvase=3
13:14:07 -- CLOSE  VALVE-R (Jan Inlet)
-------------------------- close None (Jan Inlet) result=[(True, True)]
action=close, ok=True, locked=[False]
open () {'description': 'Jan Ion Pump'}
open name=--- desc=Jan Ion Pump
checking ownership. requestor=129.138.12.150
check software interlocks O
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open O ===>> OK
GetIndicatorState O ===>> OK
change switch state (True, True)
update switch state O True args=() kw={} ncanvase=3
13:14:08 -- OPEN   VALVE-O (Jan Ion Pump)
-------------------------- open None (Jan Ion Pump) result=[(True, True)]
action=open, ok=True, locked=[False]
close () {'description': 'Microbone to Minibone'}
close name=--- desc=Microbone to Minibone
checking ownership. requestor=129.138.12.150
check software interlocks L
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel False
Close L ===>> OK
GetIndicatorState L ===>> False
change switch state (True, True)
update switch state L False args=() kw={} ncanvase=3
13:14:08 -- CLOSE  VALVE-L (Microbone to Minibone)
-------------------------- close None (Microbone to Minibone) result=[(True, True)]
action=close, ok=True, locked=[False]
open () {'description': 'Microbone to Turbo'}
open name=--- desc=Microbone to Turbo
checking ownership. requestor=129.138.12.150
check software interlocks U
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open U ===>> OK
GetIndicatorState U ===>> OK
change switch state (True, True)
update switch state U True args=() kw={} ncanvase=3
13:14:09 -- OPEN   VALVE-U (Microbone to Turbo)
-------------------------- open None (Microbone to Turbo) result=[(True, True)]
action=open, ok=True, locked=[False]
open () {'description': 'Microbone to Inlet Pipette'}
open name=--- desc=Microbone to Inlet Pipette
checking ownership. requestor=129.138.12.150
check software interlocks S
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open S ===>> OK
GetIndicatorState S ===>> OK
change switch state (True, True)
update switch state S True args=() kw={} ncanvase=3
13:14:09 -- OPEN   VALVE-S (Microbone to Inlet Pipette)
-------------------------- open None (Microbone to Inlet Pipette) result=[(True, True)]
action=open, ok=True, locked=[False]
open () {'description': 'Microbone to Getter D-50'}
open name=--- desc=Microbone to Getter D-50
checking ownership. requestor=129.138.12.150
check software interlocks K
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open K ===>> OK
GetIndicatorState K ===>> OK
change switch state (True, True)
update switch state K True args=() kw={} ncanvase=3
13:14:10 -- OPEN   VALVE-K (Microbone to Getter D-50)
-------------------------- open None (Microbone to Getter D-50) result=[(True, True)]
action=open, ok=True, locked=[False]
open () {'description': 'Microbone to Getter NP-10'}
open name=--- desc=Microbone to Getter NP-10
checking ownership. requestor=129.138.12.150
check software interlocks M
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open M ===>> OK
GetIndicatorState M ===>> OK
change switch state (True, True)
update switch state M True args=() kw={} ncanvase=3
13:14:10 -- OPEN   VALVE-M (Microbone to Getter NP-10)
-------------------------- open None (Microbone to Getter NP-10) result=[(True, True)]
action=open, ok=True, locked=[False]
close () {'description': 'CO2 Laser to Felix'}
close name=--- desc=CO2 Laser to Felix
checking ownership. requestor=129.138.12.150
check software interlocks F
interlocks []
actuate state mode=None-script, software_lock=True
VALVE-F(CO2 Laser to Felix) software locked
change switch state (True, False)
-------------------------- close None (CO2 Laser to Felix) result=[(True, False)]
action=close, ok=True, locked=[True]
open () {'description': 'CO2 Laser to Jan'}
open name=--- desc=CO2 Laser to Jan
checking ownership. requestor=129.138.12.150
check software interlocks A
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open A ===>> OK
GetIndicatorState A ===>> OK
change switch state (True, True)
update switch state A True args=() kw={} ncanvase=3
13:14:11 -- OPEN   VALVE-A (CO2 Laser to Jan)
-------------------------- open None (CO2 Laser to Jan) result=[(True, True)]
action=open, ok=True, locked=[False]
open () {'description': 'Microbone to CO2 Laser'}
open name=--- desc=Microbone to CO2 Laser
checking ownership. requestor=129.138.12.150
check software interlocks T
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open T ===>> OK
GetIndicatorState T ===>> OK
change switch state (True, True)
update switch state T True args=() kw={} ncanvase=3
13:14:11 -- OPEN   VALVE-T (Microbone to CO2 Laser)
-------------------------- open None (Microbone to CO2 Laser) result=[(True, True)]
action=open, ok=True, locked=[False]
executed snippet estimated_duration=0, duration=4.82298183441
PrepareForCO2Analysis.py completed successfully
gosub finished
set_motor ('beam', '1.0') {}
setting motor "beam" to 1.0
set motor beam to 1.0
SetMotor beam,1.0 ===>> OK
GetMotorMoving beam ===>> False
GetMotorMoving beam ===>> False
Block completed
move_to_position ('20',) {'autocenter': True}
FusionsCO2 move to position 20
sending GoToHole 20,True
GoToHole 20,True ===>> OK
GetDriveMoving ===>> OK
GetDriveMoving ===>> OK
GetDriveMoving ===>> OK
GetDriveMoving ===>> OK
GetDriveMoving ===>> False
GetDriveMoving ===>> False
Block completed
GetAutoCorrecting ===>> OK
GetAutoCorrecting ===>> OK
GetAutoCorrecting ===>> False
GetAutoCorrecting ===>> False
Block completed
update position
GetPosition ===>> 0.00000,11.96340,1.00000
got position (0.0, 11.9634, 1.0)
move to position succeeded
sleep (5,) {}
SLEEP 5.0
block started
WaitControl setup for 5.0  
Join finished
block finished. duration 5.04622292519
close () {'description': 'Microbone to Turbo'}
close name=--- desc=Microbone to Turbo
checking ownership. requestor=129.138.12.150
check software interlocks U
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close U ===>> OK
GetIndicatorState U ===>> False
change switch state (True, True)
update switch state U False args=() kw={} ncanvase=3
13:14:22 -- CLOSE  VALVE-U (Microbone to Turbo)
-------------------------- close None (Microbone to Turbo) result=[(True, True)]
action=close, ok=True, locked=[False]
enable laser
enable () {}
set extraction state FusionsCO2 Enabled (False, 'red', 1.5)
enabling laser
Enable ===>> OK
begin interval
BEGIN INTERVAL Interval 1 waiting for 30.0
block started
WaitControl setup for 30.0  
set extract to 5.0
extract (5.0,) {}
GetPosition ===>> 0.00000,11.96340,1.00000
set extraction state FusionsCO2 ON! 5.0(watts) (0.75, 'red', 1.5)
extract sample to 5.0 (watts)
set laser output
SetLaserOutput 5.0,watts ===>> OK
executing pattern triangle.lp
execute_pattern ('triangle.lp',) {}
executing pattern triangle.lp
IsPatterning ===>> OK
IsPatterning ===>> OK
IsPatterning ===>> OK
IsPatterning ===>> OK
IsPatterning ===>> OK
IsPatterning ===>> OK
IsPatterning ===>> OK
IsPatterning ===>> OK
IsPatterning ===>> OK
IsPatterning ===>> OK
IsPatterning ===>> OK
IsPatterning ===>> OK
IsPatterning ===>> OK
IsPatterning ===>> OK
IsPatterning ===>> OK
IsPatterning ===>> OK
IsPatterning ===>> OK
IsPatterning ===>> OK
IsPatterning ===>> OK
IsPatterning ===>> OK
IsPatterning ===>> OK
IsPatterning ===>> OK
IsPatterning ===>> OK
IsPatterning ===>> OK
IsPatterning ===>> OK
IsPatterning ===>> OK
IsPatterning ===>> OK
IsPatterning ===>> False
Join finished
block finished. duration 30.0807709694
Interval 1 finished
IsPatterning ===>> False
Block completed
COMPLETE INTERVAL waiting for Interval 1 to complete
end_extract () {}
ending extraction. set laser power to 0
set laser power 0
SetLaserPower 0 ===>> OK
disable () {}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% disable
set extraction state False (0.75, 'red', 1.5)
disabling laser
Disable ===>> OK
sleep (30.0,) {}
SLEEP 30.0
block started
WaitControl setup for 30.0  
Join finished
block finished. duration 30.0471351147
executed snippet estimated_duration=165.0, duration=76.4307370186
jan_co2.py completed successfully
GetAchievedOutput ===>> No Response
Requested Output= 0.000
Achieved Output=  0.000
GetResponseBlob ===>> No Response
GetOutputBlob ===>> No Response
persistence save...
persistence save - db
AutomatedRunPersister post_extraction_save deprecated
persistence save - dvc
no extraction position for 20
Extraction Finished
13:15:23 -- ******* Extraction Finished *******
no overlap. not waiting for min ms pumptime
13:15:23 -- Sending spectrometer configuration
======== Sending configuration ========
SetDeflection CDD,50.0 ===>> OK
SetDeflection H2,0.0 ===>> OK
SetDeflection H1,0.0 ===>> OK
SetDeflection L2,825.0 ===>> OK
SetDeflection L1,400.0 ===>> OK
SetDeflection AX,190.0 ===>> OK
SetZFocus 74.64 ===>> OK
SetZSymmetry -50.72 ===>> OK
SetExtractionLens 26.13 ===>> OK
SetIonRepeller -3.81 ===>> OK
SetElectronEnergy 75.08 ===>> OK
SetYSymmetry -2.81 ===>> OK
SetIonCounterVoltage 1590.0 ===>> OK
send trap current 200.0
GetParameter Trap Current Readback ===>> 198.258926936459
SetParameter Trap Current Set,200.0 ===>> OK
updating mftable name mftable
Using mftable located at /Users/jan/PychronDev/setupfiles/spectrometer/mftables/mftable.csv
============ MFtable ===========
Isotope  H2     H1     AX     L1     L2     CDD    
Ar40     5.8250 5.8786 5.9917 6.1649 6.2303 6.3931
Ar39     5.7242 5.7709 5.8841 6.0509 6.1154 6.2796
Ar36     5.4017 5.4399 5.5475 5.7098 5.7704 5.9307
================================
get initial guess parabolic
get initial guess parabolic
get initial guess parabolic
get initial guess parabolic
get initial guess parabolic
get initial guess parabolic
======== Configuration Finished ========
GetYSymmetry ===>> -2.81
GetZSymmetry ===>> -50.72
GetParameter Trap Current Readback ===>> 198.482695477019
GetHighVoltage ===>> 4500
start measurement
do measurement
L#=25461 analysis type=unknown
Measurement Started jan_unknown120_60.py
13:15:24 -- ******* Measurement Started jan_unknown120_60.py *******
state changed from extraction to measurement
setting trap, emission, spec, defl, and gains
GetExtractionLens ===>> 26.13
GetYSymmetry ===>> -2.81
GetZSymmetry ===>> -50.72
GetZFocus ===>> 74.64
GetDeflection H2 ===>> 0
GetDeflection H1 ===>> 0
GetDeflection AX ===>> 190
GetDeflection L1 ===>> 400
GetDeflection L2 ===>> 825
GetDeflection CDD ===>> 50
GetGain H2 ===>> 0.0113
GetGain H1 ===>> 0.1
GetGain AX ===>> 0.09675
GetGain L1 ===>> 0.010355
GetGain L2 ===>> 0.095649
GetGain CDD ===>> 0
GetParameter Trap Current Readback ===>> 198.035158395898
GetParameter Source Current Readback ===>> 554.726240615272
pre measurement save
New frame /Users/jan/PychronDev/data/isotopes/7c/8e2dc4-e62f-4f9d-b421-55019d14be7c.h5
flush and close file /Users/jan/PychronDev/data/isotopes/7c/8e2dc4-e62f-4f9d-b421-55019d14be7c.h5
testing...
no interpolation path defined
executed snippet estimated_duration=226.132928, duration=0.000138998031616
unknown measurement script
activate_detectors ('H2', 'H1', 'AX', 'L1', 'L2', 'CDD') {}
activate detectors
*************** Set Analysis View Ar/Ar
create graphs
clearing graphs
clear isotope group
setting isotope det=H2, iso=Ar41
setting isotope det=H1, iso=Ar40
setting isotope det=AX, iso=Ar39
setting isotope det=L1, iso=Ar38
setting isotope det=L2, iso=Ar37
setting isotope det=CDD, iso=Ar36
setting previous blanks
 - setting Ar41 blank 0.043+/-0.006
 - setting Ar40 blank 0.639+/-0.008
 - setting Ar36 blank 0.00570+/-0.00021
 - setting Ar37 blank 0.071+/-0.005
 - setting Ar38 blank 0.0108+/-0.0021
 - setting Ar39 blank 0.014+/-0.009
load analysis view
position_magnet ('Ar40',) {'detector': 'H1'}
detector Detector(H1)
POSITION Ar40 H1
setting detector H2 to Ar41 (40.9624)
setting detector H1 to Ar40 (39.9624)
setting detector AX to Ar39 (38.9624)
setting detector L1 to Ar38 (37.9624)
setting detector L2 to Ar37 (36.9624)
setting detector CDD to Ar36 (35.9624)
Mapping mass to dac mass func: "parabolic"
H1 map mass coeffs = [-0.00063987  0.15840543  0.57020999]
H1 map mass to dac 39.9624 >> 5.8786
GetDeflection H1 ===>> 0
GetHighVoltage ===>> 4500
positioning Ar40 (5.8786) on H1
setting magnet DAC
current  : 5.878600
requested: 5.878600
Delta Dac: 0.000000
Checking detector protection. dv=0.00000
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.8786 ===>> OK
Magnet settling time: 0.500 0.500
Magnet settling complete
set_dac. change=True
update labels <pychron.experiment.plot_panel.PlotPanel object at 0x15491aa70>
update labels "<pychron.graph.stacked_regression_graph.StackedRegressionGraph object at 0x151aef350>"
setting label 0 H2 Ar41
setting label 1 H1 Ar40
setting label 2 AX Ar39
setting label 3 L1 Ar38
setting label 4 L2 Ar37
setting label 5 CDD Ar36
update labels "<pychron.graph.stacked_graph.StackedGraph object at 0x151aefd70>"
setting label 0 H2 Ar41
setting label 1 H1 Ar40
equilibrate () {'delay': 3, 'inlet': 'R', 'outlet': 'O', 'eqtime': 12.0}
setting label 2 AX Ar39
Equilibration Started
setting label 3 L1 Ar38
setting label 4 L2 Ar37
13:15:25 -- ******* Equilibration Started *******
setting label 5 CDD Ar36
checking ownership. requestor=129.138.12.150
check software interlocks O
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close O ===>> OK
GetIndicatorState O ===>> False
change switch state (True, True)
update switch state O False args=() kw={} ncanvase=3
13:15:25 -- CLOSE  VALVE-O (Jan Ion Pump)
waiting 3s before opening inlet value ('R',)
checking ownership. requestor=129.138.12.150
check software interlocks R
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open R ===>> OK
GetIndicatorState R ===>> OK
change switch state (True, True)
update switch state R True args=() kw={} ncanvase=3
13:15:28 -- OPEN   VALVE-R (Jan Inlet)
equilibrating for 12.0sec
set_time_zero () {}
sniff (12.0,) {}
py_sniff
build tables- sniff [Detector(H2), Detector(H1), Detector(AX), Detector(L1), Detector(L2), Detector(CDD)]
add group /sniff/Ar41 (Group) '' table H2
add group /sniff/Ar40 (Group) '' table H1
add group /sniff/Ar39 (Group) '' table AX
add group /sniff/Ar38 (Group) '' table L1
add group /sniff/Ar37 (Group) '' table L2
add group /sniff/Ar36 (Group) '' table CDD
flush and close file /Users/jan/PychronDev/data/isotopes/7c/8e2dc4-e62f-4f9d-b421-55019d14be7c.h5
measuring sniff. ncounts=12.0
"sniff" increment series count="1" fit count="0" regressing="False"
starting measurement
Equilibration Finished
13:15:41 -- ******* Equilibration Finished *******
checking ownership. requestor=129.138.12.150
check software interlocks R
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close R ===>> OK
set states for children of R. state=False
handle state [('R', False)]
update switch state R False args=() kw={'refresh': False} ncanvase=3
refresh_canvas_needed fired
GetIndicatorState R ===>> False
change switch state (True, True)
update switch state R False args=() kw={} ncanvase=3
13:15:41 -- CLOSE  VALVE-R (Jan Inlet)
Post Equilibration Started jan_pump_extraction_line.py
13:15:41 -- ******* Post Equilibration Started jan_pump_extraction_line.py *******
testing...
no interpolation path defined
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=4.0, duration=0.0001540184021
executed snippet estimated_duration=4.0, duration=0.00159382820129
Pump after analysis
doing GOSUB
testing...
no interpolation path defined
executed snippet estimated_duration=4.0, duration=0.000248908996582
Pump Microbone
close () {'description': 'Jan Inlet'}
close name=--- desc=Jan Inlet
checking ownership. requestor=129.138.12.150
check software interlocks R
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel False
Close R ===>> OK
GetIndicatorState R ===>> False
change switch state (True, True)
update switch state R False args=() kw={} ncanvase=3
13:15:41 -- CLOSE  VALVE-R (Jan Inlet)
-------------------------- close None (Jan Inlet) result=[(True, True)]
waiting for write to finish
measurement finished
estimated time: 12.583 actual time: :12.716
flush and close file /Users/jan/PychronDev/data/isotopes/7c/8e2dc4-e62f-4f9d-b421-55019d14be7c.h5
set_fits () {}
using default fits file=/Users/jan/PychronDev/scripts/measurement/fits/nominal_linear.yaml
set "Ar41" to "('Average', 'SEM')"
set "Ar40" to "('Linear', 'SEM')"
set "Ar36" to "('Linear', 'SEM')"
set "Ar37" to "('linear', 'SEM')"
set "Ar38" to "('linear', 'SEM')"
set "Ar39" to "('Linear', 'SEM')"
set_baseline_fits () {}
using default fits file=/Users/jan/PychronDev/scripts/measurement/fits/nominal_linear.yaml
set "H2" to "('average', 'SEM')"
set "H1" to "('average', 'SEM')"
set "CDD" to "('average', 'SEM')"
set "L2" to "('average', 'SEM')"
set "L1" to "('average', 'SEM')"
set "AX" to "('average', 'SEM')"
multicollect () {'integration_time': 1, 'ncounts': 120}
build tables- signal [Detector(H2), Detector(H1), Detector(AX), Detector(L1), Detector(L2), Detector(CDD)]
add group /signal/Ar41 (Group) '' table H2
action=close, ok=True, locked=[False]
add group /signal/Ar40 (Group) '' table H1
is_closed ('F',) {}
add group /signal/Ar39 (Group) '' table AX
is F () closed?
add group /signal/Ar38 (Group) '' table L1
is closed True
add group /signal/Ar37 (Group) '' table L2
open () {'description': 'CO2 Laser to Jan'}
add group /signal/Ar36 (Group) '' table CDD
flush and close file /Users/jan/PychronDev/data/isotopes/7c/8e2dc4-e62f-4f9d-b421-55019d14be7c.h5
open name=--- desc=CO2 Laser to Jan
measuring signal. ncounts=120
checking ownership. requestor=129.138.12.150
check software interlocks A
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open A ===>> OK
GetIndicatorState A ===>> OK
change switch state (True, True)
update switch state A True args=() kw={} ncanvase=3
13:15:42 -- OPEN   VALVE-A (CO2 Laser to Jan)
-------------------------- open None (CO2 Laser to Jan) result=[(True, True)]
"signal" increment series count="2" fit count="1" regressing="True"
action=open, ok=True, locked=[False]
sleep (1,) {}
SLEEP 1.0
starting measurement
close () {'description': 'CO2 Laser to Roughing'}
close name=--- desc=CO2 Laser to Roughing
checking ownership. requestor=129.138.12.150
check software interlocks G
interlocks []
actuate state mode=None-script, software_lock=True
VALVE-G(CO2 Laser to Roughing) software locked
change switch state (True, False)
-------------------------- close None (CO2 Laser to Roughing) result=[(True, False)]
action=close, ok=True, locked=[True]
open () {'description': 'Microbone to Turbo'}
open name=--- desc=Microbone to Turbo
checking ownership. requestor=129.138.12.150
check software interlocks U
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open U ===>> OK
GetIndicatorState U ===>> OK
change switch state (True, True)
update switch state U True args=() kw={} ncanvase=3
13:15:43 -- OPEN   VALVE-U (Microbone to Turbo)
-------------------------- open None (Microbone to Turbo) result=[(True, True)]
action=open, ok=True, locked=[False]
open () {'description': 'Microbone to Getter NP-10'}
open name=--- desc=Microbone to Getter NP-10
checking ownership. requestor=129.138.12.150
check software interlocks M
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open M ===>> OK
GetIndicatorState M ===>> OK
change switch state (True, True)
update switch state M True args=() kw={} ncanvase=3
13:15:44 -- OPEN   VALVE-M (Microbone to Getter NP-10)
-------------------------- open None (Microbone to Getter NP-10) result=[(True, True)]
action=open, ok=True, locked=[False]
open () {'description': 'Microbone to Getter D-50'}
open name=--- desc=Microbone to Getter D-50
checking ownership. requestor=129.138.12.150
check software interlocks K
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open K ===>> OK
GetIndicatorState K ===>> OK
change switch state (True, True)
update switch state K True args=() kw={} ncanvase=3
13:15:44 -- OPEN   VALVE-K (Microbone to Getter D-50)
-------------------------- open None (Microbone to Getter D-50) result=[(True, True)]
action=open, ok=True, locked=[False]
open () {'description': 'Microbone to CO2 Laser'}
open name=--- desc=Microbone to CO2 Laser
checking ownership. requestor=129.138.12.150
check software interlocks T
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open T ===>> OK
GetIndicatorState T ===>> OK
change switch state (True, True)
update switch state T True args=() kw={} ncanvase=3
13:15:45 -- OPEN   VALVE-T (Microbone to CO2 Laser)
-------------------------- open None (Microbone to CO2 Laser) result=[(True, True)]
action=open, ok=True, locked=[False]
open () {'description': 'Microbone to Inlet Pipette'}
open name=--- desc=Microbone to Inlet Pipette
checking ownership. requestor=129.138.12.150
check software interlocks S
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open S ===>> OK
GetIndicatorState S ===>> OK
change switch state (True, True)
update switch state S True args=() kw={} ncanvase=3
13:15:46 -- OPEN   VALVE-S (Microbone to Inlet Pipette)
-------------------------- open None (Microbone to Inlet Pipette) result=[(True, True)]
action=open, ok=True, locked=[False]
sleep (1,) {}
SLEEP 1.0
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.14418665528269356}"
set_resource () {'name': 'CO2PumpTimeFlag', 'value': 30}
Set CO2PumpTimeFlag 30 ===>> OK
release ('JanCO2Flag',) {}
release JanCO2Flag
Set JanCO2Flag 0 ===>> OK
executed snippet estimated_duration=6.0, duration=5.96664214134
PumpMicrobone.py completed successfully
gosub finished
get_resource_value () {'name': 'JanMiniboneFlag'}
Read JanMiniboneFlag ===>> 0
Get Resource Value JanMiniboneFlag=0.0
get resource value 0.0
get_resource_value () {'name': 'JanMiniboneFlag'}
Read JanMiniboneFlag ===>> 0
Get Resource Value JanMiniboneFlag=0.0
executed snippet estimated_duration=4.0, duration=5.97807502747
jan_pump_extraction_line.py completed successfully
Post Equilibration Finished
13:15:47 -- ******* Post Equilibration Finished *******
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.14418665528269356}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.14418665528269356}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.14418665528269356}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.14418665528269356}"
13:16:07 -- collecting point 25
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.14418665528269356}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.14418665528269356}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.14418665528269356}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.14418665528269356}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.14418665528269356}"
13:16:34 -- collecting point 50
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.14418665528269356}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.14418665528269356}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.14418665528269356}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.14418665528269356}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.14418665528269356}"
13:17:00 -- collecting point 75
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.14418665528269356}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.14418665528269356}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.14418665528269356}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.14418665528269356}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.14418665528269356}"
13:17:26 -- collecting point 100
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.14418665528269356}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.14418665528269356}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.14418665528269356}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.14418665528269356}"
waiting for write to finish
measurement finished
estimated time: 125.829 actual time: :126.175
flush and close file /Users/jan/PychronDev/data/isotopes/7c/8e2dc4-e62f-4f9d-b421-55019d14be7c.h5
baselines () {'settling_time': 15.0, 'detector': 'H1', 'mass': 34.2, 'ncounts': 60}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Baseline
build tables- baseline [Detector(H2), Detector(H1), Detector(AX), Detector(L1), Detector(L2), Detector(CDD)]
add group baseline table H2
add group baseline table H1
add group baseline table AX
add group baseline table L1
add group baseline table L2
add group baseline table CDD
flush and close file /Users/jan/PychronDev/data/isotopes/7c/8e2dc4-e62f-4f9d-b421-55019d14be7c.h5
detector Detector(H1)
POSITION 34.2 H1
Mapping mass to dac mass func: "parabolic"
H1 map mass coeffs = [-0.00063987  0.15840543  0.57020999]
H1 map mass to dac 34.2 >> 5.23925599104
GetDeflection H1 ===>> 0
GetHighVoltage ===>> 4500
positioning 34.2 (5.23925599104) on H1
setting magnet DAC
current  : 5.878600
requested: 5.239256
Delta Dac: 0.639344
Checking detector protection. dv=0.63934
Checking detector "CDD". Protection Threshold: 0.5 (V)
ProtectDetector CDD,On ===>> OK
GetDeflection CDD ===>> 2000
Protected = 2000
SetMagnetDAC 5.23925599104 ===>> OK
Magnet settling time: 0.500 0.500
Magnet settling complete
Wait for magnet to stop moving
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> False
Magnet move complete
Unprotect detectors
ProtectDetector CDD,Off ===>> OK
GetDeflection CDD ===>> 50
set_dac. change=True
Delaying 15.0s for detectors to settle
Join finished
measuring baseline. ncounts=60
"baseline" increment series count="2" fit count="1" regressing="True"
starting measurement
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.09392974304290883}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.08489590011361803}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10986694352380652}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1334241368305834}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.13583211643607815}"
13:18:32 -- collecting point 25
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.14310130239006358}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.15353470147022086}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.15819142229451724}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.16403983702356234}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.16437566190230773}"
13:18:58 -- collecting point 50
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1666245733910833}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.16624524778297528}"
waiting for write to finish
measurement finished
estimated time: 62.915 actual time: :63.084
flush and close file /Users/jan/PychronDev/data/isotopes/7c/8e2dc4-e62f-4f9d-b421-55019d14be7c.h5
activate_detectors ('H1', 'AX', 'CDD') {'peak_center': True}
peak_center () {'detector': 'H1', 'integration_time': 0.262144, 'isotope': 'Ar40'}
peak center: mean=1957.15091421 threshold=3
peak center started
setup peak center. detector=['H1', 'AX', 'CDD'], isotope=Ar40
VersionedUnpickler [<apptools.sweet_pickle.versioned_unpickler.VersionedUnpickler object at 0x1558bbd10>] using Updater [<apptools.sweet_pickle.updater.Updater object at 0x12b7be0b0>]
VersionedUnpickler [<apptools.sweet_pickle.versioned_unpickler.VersionedUnpickler object at 0x1558bbd10>] using Updater [<apptools.sweet_pickle.updater.Updater object at 0x12b7be0b0>]
VersionedUnpickler [<apptools.sweet_pickle.versioned_unpickler.VersionedUnpickler object at 0x1499073b0>] using Updater [<apptools.sweet_pickle.updater.Updater object at 0x12b7be0b0>]
Mapping mass to dac mass func: "parabolic"
H1 map mass coeffs = [-0.00063987  0.15840543  0.57020999]
H1 map mass to dac 39.9624 >> 5.8786
GetDeflection H1 ===>> 0
GetHighVoltage ===>> 4500
do peak center. <pychron.spectrometer.jobs.peak_center.PeakCenter object at 0x12b7be110>
doing pc
starting peak center. center dac= 5.8786 step_width=0.0015
width = 0.0015
get scan parameters. half-width=0.015,window=0.015, i=0, scalar=1
Scan parameters center=5.87860 width=0.03000 (5.86360 - 5.89360)
Moving to starting dac 5.8636
setting magnet DAC
current  : 5.239256
requested: 5.863600
Delta Dac: 0.624344
Checking detector protection. dv=0.62434
Checking detector "CDD". Protection Threshold: 0.5 (V)
ProtectDetector CDD,On ===>> OK
GetDeflection CDD ===>> 2000
Protected = 2000
SetMagnetDAC 5.8636 ===>> OK
Magnet settling time: 0.500 0.500
Magnet settling complete
Wait for magnet to stop moving
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> False
Magnet move complete
Unprotect detectors
ProtectDetector CDD,Off ===>> OK
GetDeflection CDD ===>> 50
set_dac. change=True
Wait until signal near baseline. tol= 0.163723757064. timeout= 10
Peak center failed to move to a baseline position
_do_sweep sm= 5.8636, em= 5.8936, stm= 0.0015
calculated step values: start=5.8636, end=5.8936, width=0.0015, nsteps=21.0
setting magnet DAC
current  : 5.863600
requested: 5.863600
Delta Dac: 0.000000
Checking detector protection. dv=0.00000
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.8636 ===>> OK
set_dac. change=False
setting magnet DAC
current  : 5.863600
requested: 5.865179
Delta Dac: 0.001579
Checking detector protection. dv=0.00158
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.86517894737 ===>> OK
Magnet settling time: 2.097 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.865179
requested: 5.866758
Delta Dac: 0.001579
Checking detector protection. dv=0.00158
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.86675789474 ===>> OK
Magnet settling time: 2.097 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.866758
requested: 5.868337
Delta Dac: 0.001579
Checking detector protection. dv=0.00158
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.86833684211 ===>> OK
Magnet settling time: 2.097 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.868337
requested: 5.869916
Delta Dac: 0.001579
Checking detector protection. dv=0.00158
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.86991578947 ===>> OK
Magnet settling time: 2.097 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.869916
requested: 5.871495
Delta Dac: 0.001579
Checking detector protection. dv=0.00158
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.87149473684 ===>> OK
Magnet settling time: 2.097 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.871495
requested: 5.873074
Delta Dac: 0.001579
Checking detector protection. dv=0.00158
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.87307368421 ===>> OK
Magnet settling time: 2.097 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.873074
requested: 5.874653
Delta Dac: 0.001579
Checking detector protection. dv=0.00158
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.87465263158 ===>> OK
Magnet settling time: 2.097 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.874653
requested: 5.876232
Delta Dac: 0.001579
Checking detector protection. dv=0.00158
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.87623157895 ===>> OK
Magnet settling time: 2.097 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.876232
requested: 5.877811
Delta Dac: 0.001579
Checking detector protection. dv=0.00158
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.87781052632 ===>> OK
Magnet settling time: 2.097 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.877811
requested: 5.879389
Delta Dac: 0.001579
Checking detector protection. dv=0.00158
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.87938947368 ===>> OK
Magnet settling time: 2.097 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.879389
requested: 5.880968
Delta Dac: 0.001579
Checking detector protection. dv=0.00158
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.88096842105 ===>> OK
Magnet settling time: 2.097 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.880968
requested: 5.882547
Delta Dac: 0.001579
Checking detector protection. dv=0.00158
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.88254736842 ===>> OK
Magnet settling time: 2.097 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.882547
requested: 5.884126
Delta Dac: 0.001579
Checking detector protection. dv=0.00158
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.88412631579 ===>> OK
Magnet settling time: 2.097 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.884126
requested: 5.885705
Delta Dac: 0.001579
Checking detector protection. dv=0.00158
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.88570526316 ===>> OK
Magnet settling time: 2.097 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.885705
requested: 5.887284
Delta Dac: 0.001579
Checking detector protection. dv=0.00158
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.88728421053 ===>> OK
Magnet settling time: 2.097 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.887284
requested: 5.888863
Delta Dac: 0.001579
Checking detector protection. dv=0.00158
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.88886315789 ===>> OK
Magnet settling time: 2.097 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.888863
requested: 5.890442
Delta Dac: 0.001579
Checking detector protection. dv=0.00158
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.89044210526 ===>> OK
Magnet settling time: 2.097 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.890442
requested: 5.892021
Delta Dac: 0.001579
Checking detector protection. dv=0.00158
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.89202105263 ===>> OK
Magnet settling time: 2.097 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.892021
requested: 5.893600
Delta Dac: 0.001579
Checking detector protection. dv=0.00158
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.8936 ===>> OK
Magnet settling time: 2.097 0.500
Magnet settling complete
set_dac. change=True
result of _do_sweep=True
result of _calculate_peak_center=([5.8708444889779567, 5.8786300601202415, 5.8864156312625262], [1375.2402999412302, 1867.86251819991, 1378.5499589487476], 5.8762252505010029, 1867.86251819991)
Failed to find a valid peak. No peak greater than 1.0. max = 0.0420152279796
new center pos Detector(H1) (Ar40) @ 5.87863006012
GetHighVoltage ===>> 4500
GetDeflection H1 ===>> 0
dac uncorrected for HV and deflection 5.87863006012
update mftable H1 Ar40 5.87863006012 message=automated run peakcenter
get initial guess parabolic
get initial guess parabolic
get initial guess parabolic
get initial guess parabolic
get initial guess parabolic
get initial guess parabolic
dump mftable to /Users/jan/PychronDev/setupfiles/spectrometer/mftables/mftable.csv
add to repo msg=modified - automated run peakcenter
sweep finished
locally archiving mftable
setting magnet DAC
current  : 5.893600
requested: 5.878630
Delta Dac: 0.014970
Checking detector protection. dv=0.01497
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.87863006012 ===>> OK
Magnet settling time: 0.500 0.500
Magnet settling complete
set_dac. change=True
Failed to find a valid peak. No peak greater than 1.0. max = 0.0420152279796
flush and close file /Users/jan/PychronDev/data/isotopes/7c/8e2dc4-e62f-4f9d-b421-55019d14be7c.h5
finished measure script
executed snippet estimated_duration=226.132928, duration=282.173371077
jan_unknown120_60.py completed successfully
Measurement Finished
13:20:06 -- ******* Measurement Finished *******
Post Measurement Started jan_pump_ms.py
13:20:06 -- ******* Post Measurement Started jan_pump_ms.py *******
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=2.90870666504e-05
Pumping spectrometer
open () {'name': 'O'}
open name=O desc=---
checking ownership. requestor=129.138.12.150
check software interlocks O
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open O ===>> OK
GetIndicatorState O ===>> OK
change switch state (True, True)
update switch state O True args=() kw={} ncanvase=3
13:20:06 -- OPEN   VALVE-O (Jan Ion Pump)
-------------------------- open O () result=[(True, True)]
action=open, ok=True, locked=[False]
executed snippet estimated_duration=0, duration=0.392392158508
jan_pump_ms.py completed successfully
setting _ms_pumptime
Post Measurement Finished
13:20:06 -- ******* Post Measurement Finished *******
$$$$$$$$$$$$$$$$$$$$ state at run end measurement
state changed from measurement to success
post measurement save measured=True aborted=False
Set filtering
setting fod for Ar41= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
setting fod for H2= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
setting fod for Ar40= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
setting fod for H1= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
setting fod for Ar36= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
setting fod for CDD= {'filter_outliers': True, 'std_devs': 10, 'iterations': 1}
setting fod for Ar37= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
setting fod for L2= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
setting fod for Ar38= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
setting fod for L1= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
setting fod for Ar39= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
setting fod for AX= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
persistence save...
persistence save - db
post measurement save
5624226256 connecting to database sqlite:////Users/jan/PychronDev/.appdata/local_lab.db
connected to db sqlite:////Users/jan/PychronDev/.appdata/local_lab.db
create new session 5624226256
close session 5624226256
No database instance. Not saving post measurement to isotopedb database
$$$$$$$$$$$$$$$ auto_save_detector_ic=False
massspec enabled True
create new session 4974049136
MassSpec Database Version: 16.0
close session 4974049136
saving post measurement to secondary database
saving to massspec database 129.138.12.160/massspecdata
setting labnumber to 25461
setting aliquot to 5
setting step to 
setting uuid to 7c8e2dc4-e62f-4f9d-b421-55019d14be7c
setting irradpos to 25461
setting extract_device to Fusions CO2
setting tray to 
setting position to 20
setting power_requested to 5.0
setting extract_value to 5.0
setting duration to 30.0
setting duration_at_request to 30.0
setting first_stage_delay to 30.0
setting cleanup to 30.0
setting comment to J:10
setting irradiation to NM-290
setting level to J
setting irradiation_level to J
setting sample to FC-2
setting material to 
setting project to 
setting mass_spectrometer to jan
no attribute chron_dosages
no attribute production_ratios
no attribute interference_corrections
no attribute production_name
no attribute j
Reference Isotope=Ar40
Reference Detector=H1
%%%%%%%%%%%%%%%%%%%% Comment: J:10 %%%%%%%%%%%%%%%%%%%
adding isotope Ar41 H2
add baseline dbdet= Ar41. original det= H2
get baseline data Ar41 H2
Get data baseline <pychron.processing.isotope.Baseline object at 0x1198ea690> len t=60
baseline Ar41. v=-0.213548205661, e=0.00708885129901
get signal data Ar41 H2
Get data signal Ar41 0.151+/-0.005 len t=120
adding isotope Ar40 H1
add baseline dbdet= Ar40. original det= H1
get baseline data Ar40 H1
Get data baseline <pychron.processing.isotope.Baseline object at 0x1198d25d0> len t=60
baseline Ar40. v=0.17010814466, e=0.00668110090172
get signal data Ar40 H1
Get data signal Ar40 2047.32+/-0.09 len t=120
adding isotope Ar39 AX
add baseline dbdet= Ar39. original det= AX
get baseline data Ar39 AX
Get data baseline <pychron.processing.isotope.Baseline object at 0x1198d2950> len t=60
baseline Ar39. v=-0.0768986075367, e=0.00709750590311
get signal data Ar39 AX
Get data signal Ar39 370.542+/-0.033 len t=120
adding isotope Ar38 L1
add baseline dbdet= Ar38. original det= L1
get baseline data Ar38 L1
Get data baseline <pychron.processing.isotope.Baseline object at 0x1316c2110> len t=60
baseline Ar38. v=-0.0292172027077, e=0.004763930905
get signal data Ar38 L1
Get data signal Ar38 4.790+/-0.006 len t=120
adding isotope Ar37 L2
add baseline dbdet= Ar37. original det= L2
get baseline data Ar37 L2
Get data baseline <pychron.processing.isotope.Baseline object at 0x1316c29d0> len t=60
baseline Ar37. v=-0.0310348338509, e=0.00508118591519
get signal data Ar37 L2
Get data signal Ar37 1.192+/-0.013 len t=120
adding isotope Ar36 CDD
add baseline dbdet= Ar36. original det= CDD
get baseline data Ar36 CDD
Get data baseline <pychron.processing.isotope.Baseline object at 0x1316c22d0> len t=60
baseline Ar36. v=0.000454389765198, e=3.17195027698e-05
get signal data Ar36 CDD
Get data signal Ar36 0.0277+/-0.0004 len t=120
25461-05 added analysis time 0.467210054398s
analysis added to mass spec database
mass spec save time= 0.484
persistence save - dvc
================= post measurement started
create new session 4939961168
close session 4939961168
---------------- Experiment Queue saving disabled
DVC saving peakcenter
Failed to find a valid peak. No peak greater than 1.0. max = 0.0420152279796
Smart pull ahead: 0 behind: 0
Up-to-date with origin
add to repo msg=modified - ad8224ebc6dbfeb9f5997218dfa5fe690569839d.json
add to repo msg=modified - 61-05.json
add to repo msg=modified - 61-05.dat.json
add to repo msg=modified - 61-05.blan.json
add to repo msg=modified - 61-05.inte.json
add to repo msg=modified - 61-05.icfa.json
add to repo msg=modified - 61-05.base.json
not at valid file /Users/jan/PychronDev/data/.dvc/repositories/C_Henry/254/tags/61-05.tags.json
add to repo msg=modified - 61-05.peak.json
add to repo msg=modified - 61-05.extr.json
not at valid file /Users/jan/PychronDev/data/.dvc/repositories/C_Henry/254/monitor/61-05.moni.json
commit message=<COLLECTION>
add to repo msg=modified - 61-05.inte.json
add to repo msg=modified - 61-05.base.json
commit message=<ISOEVO> default collection fits
add to repo msg=modified - 61-05.blan.json
commit message=<BLANKS> preceding bu-FC-J-8040
add to repo msg=modified - 61-05.icfa.json
commit message=<ICFactor> default
push repository <pychron.git_archive.repo_manager.GitRepoManager object at 0x13252e110>
pushing to remote=origin, url=https://github.com
no changes to meta repo
create new session 4939961168
add association C_Henry
get identifier "25461"
setting analysis irradiation position=<pychron.dvc.dvc_orm.IrradiationPositionTbl object at 0x13368ec90>
close session 4939961168
================= post measurement finished
13:20:20 -- ******* Post Run Check *******
loading queue conditionals post_run_actions
loading system conditionals post_run_actions
loading conditionals from /Users/jan/PychronDev/setupfiles/spectrometer/default_conditionals.yaml
loading queue conditionals post_run_terminations
loading system conditionals post_run_terminations
loading conditionals from /Users/jan/PychronDev/setupfiles/spectrometer/default_conditionals.yaml
Checking default post run terminations n=1
GetDeflection CDD ===>> 50
testing CDD==2000
evaluate ot="CDD.deflection==2000" t="CDD==2000", ctx="{'CDD': 50.0}"
13:20:20 -- ******* Post Run Check Passed *******
13:20:20 -- Automated run 25461-05 success duration: 376.502 s
----------------- finish -----------------
----------------- stop -----------------
retroactive repository identifiers disabled
finish run. runs completed=29
update duration runid=25461-05, duration=376.501924992, md5=301e91d8
write rem/ex queues
/Users/jan/PychronDev/experiments/rem/CurrentExperiment.rem.txt
/Users/jan/PychronDev/experiments/rem/CurrentExperiment.ex.txt
doing event level: 3
